/******************************************************************************/
/*                       Novatek MicroElectronics Corp.                       */
/*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
/*                         HsinChu 300, Taiwan, R.O.C.                        */
/*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
/*                            All Rights Reserved                             */
/******************************************************************************/
#ifndef __MODEL_VFY_H__
#define __MODEL_VFY_H__

#if MD_SCALER_TYPE != SCALER_TYPE
#error "Wrong scaler type in KeilC! Please make sure what scaler you use!"
#endif

#if MD_MCU_UART_OUTPUT > 4
#error "MD_MCU_UART_OUTPUT is over range! The range is 0 ~ 4."
#else
#undef MCU_UART_OUTPUT
#define MCU_UART_OUTPUT MD_MCU_UART_OUTPUT

#undef MCU_UART_BAUD_RATE
#define MCU_UART_BAUD_RATE MD_MCU_UART_BAUD_RATE
#endif

#if MCU_CLK_TIMES > 6
#error "MCU_CLK_TIMES is over range! The range is 1 ~ 6."
#else
#undef MCU_CLK_TIMES
#define MCU_CLK_TIMES MD_MCU_CLK_TIMES
#endif

#if (MD_INPUT_INTERFACE | INPUT_INTERFACE) != INPUT_INTERFACE
#error "MD_INPUT_INTERFACE error!"
#else
#undef INPUT_INTERFACE
#define INPUT_INTERFACE MD_INPUT_INTERFACE
#endif

#if (MD_ENABLE_LOW_PWR_MODE == ON) && (ENABLE_LOW_PWR_MODE == OFF)
#error "MD_ENABLE_LOW_PWR_MODE error!"
#else
#undef ENABLE_LOW_PWR_MODE
#define ENABLE_LOW_PWR_MODE MD_ENABLE_LOW_PWR_MODE
#endif

#if (MD_ENABLE_CHECK_SYS5V == ON) && (ENABLE_CHECK_SYS5V == OFF)
#error "MD_ENABLE_CHECK_SYS5V error!"
#else
#undef ENABLE_CHECK_SYS5V
#define ENABLE_CHECK_SYS5V MD_ENABLE_CHECK_SYS5V
#endif

#if (MD_ENABLE_LPD == ON) && (ENABLE_LPD == OFF)
#error "MD_ENABLE_LPD error!"
#else
#undef ENABLE_LPD
#define ENABLE_LPD MD_ENABLE_LPD
#endif

#if (MD_ENABLE_HDCP == ON) && (ENABLE_HDCP == OFF)
#error "MD_ENABLE_HDCP error!"
#else
#undef ENABLE_HDCP
#define ENABLE_HDCP MD_ENABLE_HDCP
#endif

#if (MD_ENABLE_HDCP_KEY_DCRPT == ON) && (ENABLE_HDCP_KEY_DCRPT == OFF)
#error "MD_ENABLE_HDCP_KEY_DCRPT error!"
#else
#undef ENABLE_HDCP_KEY_DCRPT
#define ENABLE_HDCP_KEY_DCRPT MD_ENABLE_HDCP_KEY_DCRPT
#endif

#if (MD_ENABLE_DEMO_HDCP_KEY == ON) && (ENABLE_DEMO_HDCP_KEY == OFF)
#error "MD_ENABLE_HDCP error!"
#else
#undef ENABLE_DEMO_HDCP_KEY
#define ENABLE_DEMO_HDCP_KEY MD_ENABLE_DEMO_HDCP_KEY
#endif

#if (MD_ENABLE_NVT_HDCP_WRITER == ON) && (ENABLE_NVT_HDCP_WRITER == OFF)
#error "MD_ENABLE_NVT_HDCP_WRITER error!"
#else
#undef ENABLE_NVT_HDCP_WRITER
#define ENABLE_NVT_HDCP_WRITER MD_ENABLE_NVT_HDCP_WRITER
#endif

#if (MD_ENABLE_HDCP_TRIM_MODE == ON) && (ENABLE_HDCP_TRIM_MODE == OFF)
#error "MD_ENABLE_HDCP_TRIM_MODE error!"
#else
#undef ENABLE_HDCP_TRIM_MODE
#define ENABLE_HDCP_TRIM_MODE MD_ENABLE_HDCP_TRIM_MODE
#endif

#if (MD_ENABLE_EDID_TRIM_MODE == ON) && (ENABLE_EDID_TRIM_MODE == OFF)
#error "MD_ENABLE_EDID_TRIM_MODE error!"
#else
#undef ENABLE_EDID_TRIM_MODE
#define ENABLE_EDID_TRIM_MODE MD_ENABLE_EDID_TRIM_MODE
#endif

#if (MD_ENABLE_GAMMA == ON) && (ENABLE_GAMMA == OFF)
#error "MD_ENABLE_GAMMA error!"
#else
#undef ENABLE_GAMMA
#define ENABLE_GAMMA MD_ENABLE_GAMMA
#endif

#if (MD_ENABLE_10TO10_GAMMA == ON) && (ENABLE_10TO10_GAMMA == OFF)
#error "MD_ENABLE_10TO10_GAMMA error!"
#else
#undef ENABLE_10TO10_GAMMA
#define ENABLE_10TO10_GAMMA MD_ENABLE_10TO10_GAMMA
#endif

#if (MD_ENABLE_10TO12_GAMMA == ON) && (ENABLE_10TO12_GAMMA == OFF)
#error "MD_ENABLE_10TO12_GAMMA error!"
#else
#undef ENABLE_10TO12_GAMMA
#define ENABLE_10TO12_GAMMA MD_ENABLE_10TO12_GAMMA
#endif

#if (MD_ENABLE_PRE_REV_GAMMA == ON) && (ENABLE_PRE_REV_GAMMA == OFF)
#error "MD_ENABLE_PRE_REV_GAMMA error!"
#else
#undef ENABLE_PRE_REV_GAMMA
#define ENABLE_PRE_REV_GAMMA MD_ENABLE_PRE_REV_GAMMA
#endif

#if (MD_ENABLE_SINGLE_DDR == ON) && (ENABLE_SINGLE_DDR == OFF)
#error "MD_ENABLE_SINGLE_DDR error!"
#else
#undef ENABLE_SINGLE_DDR
#define ENABLE_SINGLE_DDR MD_ENABLE_SINGLE_DDR
#endif

#if (MD_ENABLE_OD == ON) && (ENABLE_OD == OFF)
#error "MD_ENABLE_OD error!"
#elif (MD_ENABLE_OD == ON) && (MD_ENABLE_MMU == OFF)
#error "MD_ENABLE_OD ON , MD_ENABLE_MMU need ON!"
#else
#undef ENABLE_OD
#define ENABLE_OD MD_ENABLE_OD
#endif

#if MD_ENABLE_OD_TRANSFORM == ON && ENABLE_OD_TRANSFORM == OFF
#error "MD_ENABLE_OD_TRANSFORM error!"
#else
#undef ENABLE_OD_TRANSFORM
#define ENABLE_OD_TRANSFORM MD_ENABLE_OD_TRANSFORM
#endif

#if (MD_ENABLE_OD_3D_MODE == ON) && (ENABLE_OD_3D_MODE == OFF)
#error "MD_ENABLE_OD_3D_MODE error!"
#else
#undef ENABLE_OD_3D_MODE
#define ENABLE_OD_3D_MODE MD_ENABLE_OD_3D_MODE
#endif

#if (MD_ENABLE_OD_MOTION_CHK == ON) && (ENABLE_OD_MOTION_CHK == OFF)
#error "MD_ENABLE_OD_MOTION_CHK error!"
#else
#undef ENABLE_OD_MOTION_CHK
#define ENABLE_OD_MOTION_CHK MD_ENABLE_OD_MOTION_CHK
#endif

#if (MD_ENABLE_MMU == ON) && (ENABLE_MMU == OFF)
#error "MD_ENABLE_MMU error!"
#else
#undef ENABLE_MMU
#define ENABLE_MMU MD_ENABLE_MMU
#endif

#if (MD_ENABLE_FE2P == ON) && (ENABLE_FE2P == OFF)
#error "MD_ENABLE_FE2P error!"
#else
#undef ENABLE_FE2P
#define ENABLE_FE2P MD_ENABLE_FE2P
#endif

#if (MD_ENABLE_DIRECT_FE2P == ON) && (ENABLE_DIRECT_FE2P == OFF)
#error "MD_ENABLE_DIRECT_FE2P error!"
#else
#undef ENABLE_DIRECT_FE2P
#define ENABLE_DIRECT_FE2P MD_ENABLE_DIRECT_FE2P
#if (ENABLE_DIRECT_FE2P == ON)
#if ((FE2P_DIRECTMODE_OFFSET+(FE2P_DIRECTMODE_LEN*1024))/65536) > FLASH_BANK
#error "Fe2p direct mode area configure over flash size"
#endif
#endif
#endif

#if (MD_ENABLE_HDMI == ON) && (ENABLE_HDMI == OFF)
#error "MD_ENABLE_HDMI error!"
#else
#undef ENABLE_HDMI
#define ENABLE_HDMI MD_ENABLE_HDMI
#endif

#if (MD_ENABLE_HDMI_PRETEST == ON) && (ENABLE_HDMI_PRETEST == OFF)
#error "MD_ENABLE_HDMI_PRETEST error!"
#else
#undef ENABLE_HDMI_PRETEST
#define ENABLE_HDMI_PRETEST MD_ENABLE_HDMI_PRETEST
#endif

#if (MD_ENABLE_AUTO_CONTROL == ON) && (ENABLE_AUTO_CONTROL == OFF)
#error "MD_ENABLE_AUTO_CONTROL error!"
#else
#undef ENABLE_AUTO_CONTROL
#define ENABLE_AUTO_CONTROL MD_ENABLE_AUTO_CONTROL
#if MD_ENABLE_AUTO_CONTROL == ON
#undef ENABLE_SERIAL_INT
#define ENABLE_SERIAL_INT ON
#endif
#endif

#if (MD_ENABLE_HW_CEC == ON) && (ENABLE_HW_CEC == OFF)
#error "MD_ENABLE_HW_CEC error!"
#else
#undef ENABLE_HW_CEC
#define ENABLE_HW_CEC MD_ENABLE_HW_CEC
#endif

#if (MD_ENABLE_HDMI_FS_MUTE == ON) && (ENABLE_HDMI_FS_MUTE == OFF)
#error "MD_ENABLE_HDMI_FS_MUTE"
#else
#undef ENABLE_HDMI_FS_MUTE
#define ENABLE_HDMI_FS_MUTE MD_ENABLE_HDMI_FS_MUTE
#endif

#if (MD_ENABLE_HDMI_AUDIO_AUTO_MUTE == ON) && (ENABLE_HDMI_AUDIO_AUTO_MUTE == OFF)
#error "MD_ENABLE_HDMI_AUDIO_AUTO_MUTE"
#else
#undef ENABLE_HDMI_AUDIO_AUTO_MUTE
#define ENABLE_HDMI_AUDIO_AUTO_MUTE MD_ENABLE_HDMI_AUDIO_AUTO_MUTE
#endif

#if (MD_ENABLE_DBC == ON) && (ENABLE_DBC == OFF)
#error "MD_ENABLE_DBC error!"
#else
#undef ENABLE_DBC
#define ENABLE_DBC MD_ENABLE_DBC
#endif

#if (MD_ENABLE_DBC_HW_DEBOUNCE == ON) && (ENABLE_DBC_HW_DEBOUNCE == OFF)
#error "MD_ENABLE_DBC_HW_DEBOUNCE error!"
#else
#undef ENABLE_DBC_HW_DEBOUNCE
#define ENABLE_DBC_HW_DEBOUNCE MD_ENABLE_DBC_HW_DEBOUNCE
#endif

#if (MD_ENABLE_DIGI3_HPD == ON) && (ENABLE_DIGI3_HPD == OFF)
#error "MD_ENABLE_DIGI3_HPD error!"
#else
#undef ENABLE_DIGI3_HPD
#define ENABLE_DIGI3_HPD MD_ENABLE_DIGI3_HPD
#endif

#if (MD_ENABLE_DIGI2_HPD == ON) && (ENABLE_DIGI2_HPD == OFF)
#error "MD_ENABLE_DIGI2_HPD error!"
#else
#undef ENABLE_DIGI2_HPD
#define ENABLE_DIGI2_HPD MD_ENABLE_DIGI2_HPD
#endif

#if (MD_ENABLE_DIGI1_HPD == ON) && (ENABLE_DIGI1_HPD == OFF)
#error "MD_ENABLE_DIGI1_HPD error!"
#else
#undef ENABLE_DIGI1_HPD
#define ENABLE_DIGI1_HPD MD_ENABLE_DIGI1_HPD
#endif

#if (MD_ENABLE_DIGI0_HPD == ON) && (ENABLE_DIGI0_HPD == OFF)
#error "MD_ENABLE_DIGI0_HPD error!"
#else
#undef ENABLE_DIGI0_HPD
#define ENABLE_DIGI0_HPD MD_ENABLE_DIGI0_HPD
#endif

#if (MD_ENABLE_DP_HPD == ON) && (ENABLE_DP_HPD == OFF)
#error "MD_ENABLE_DP_HPD error!"
#else
#undef ENABLE_DP_HPD
#define ENABLE_DP_HPD MD_ENABLE_DP_HPD
#endif

#if (MD_ENABLE_DP_HPD == OFF) && (MD_ENABLE_DP_ADV_HPD == ON)
#error "MD_ENABLE_DP_HPD OFF, MD_ENABLE_DP_ADV_HPD USELESS error! "
#elif (MD_ENABLE_DP_ADV_HPD == ON) && (ENABLE_DP_ADV_HPD == OFF)
#error "MD_ENABLE_DP_ADV_HPD error!"
#else
#undef ENABLE_DP_ADV_HPD
#define ENABLE_DP_ADV_HPD MD_ENABLE_DP_ADV_HPD
#endif

#if (MD_ENABLE_DP1_HPD == ON) && (ENABLE_DP1_HPD == OFF)
#error "MD_ENABLE_DP1_HPD error!"
#else
#undef ENABLE_DP1_HPD
#define ENABLE_DP1_HPD MD_ENABLE_DP1_HPD
#endif

#if (MD_ENABLE_DP1_HPD == OFF) && (MD_ENABLE_DP1_ADV_HPD == ON)
#error "MD_ENABLE_DP1_HPD OFF, MD_ENABLE_DP1_ADV_HPD USELESS error! "
#elif (MD_ENABLE_DP1_ADV_HPD == ON) && (ENABLE_DP1_ADV_HPD == OFF)
#error "MD_ENABLE_DP1_ADV_HPD error!"
#else
#undef ENABLE_DP1_ADV_HPD
#define ENABLE_DP1_ADV_HPD MD_ENABLE_DP1_ADV_HPD
#endif

#if (MD_ENABLE_DP2_HPD == ON) && (ENABLE_DP2_HPD == OFF)
#error "MD_ENABLE_DP2_HPD error!"
#else
#undef ENABLE_DP2_HPD
#define ENABLE_DP2_HPD MD_ENABLE_DP2_HPD
#endif

#if (MD_ENABLE_DP2_HPD == OFF) && (MD_ENABLE_DP2_ADV_HPD == ON)
#error "MD_ENABLE_DP2_HPD OFF, MD_ENABLE_DP2_ADV_HPD USELESS error! "
#elif (MD_ENABLE_DP2_ADV_HPD == ON) && (ENABLE_DP2_ADV_HPD == OFF)
#error "MD_ENABLE_DP2_ADV_HPD error!"
#else
#undef ENABLE_DP2_ADV_HPD
#define ENABLE_DP2_ADV_HPD MD_ENABLE_DP2_ADV_HPD
#endif

#if (MD_ENABLE_DP3_HPD == ON) && (ENABLE_DP3_HPD == OFF)
#error "MD_ENABLE_DP3_HPD error!"
#else
#undef ENABLE_DP3_HPD
#define ENABLE_DP3_HPD MD_ENABLE_DP3_HPD
#endif

#if (MD_ENABLE_DP3_HPD == OFF) && (MD_ENABLE_DP3_ADV_HPD == ON)
#error "MD_ENABLE_DP3_HPD OFF, MD_ENABLE_DP3_ADV_HPD USELESS error! "
#elif (MD_ENABLE_DP3_ADV_HPD == ON) && (ENABLE_DP3_ADV_HPD == OFF)
#error "MD_ENABLE_DP3_ADV_HPD error!"
#else
#undef ENABLE_DP3_ADV_HPD
#define ENABLE_DP3_ADV_HPD MD_ENABLE_DP3_ADV_HPD
#endif

#if (MD_ENABLE_SCALER_AUDIO == ON) && (ENABLE_SCALER_AUDIO == OFF)
#error "MD_ENABLE_SCALER_AUDIO error!"
#else
#undef ENABLE_SCALER_AUDIO
#define ENABLE_SCALER_AUDIO MD_ENABLE_SCALER_AUDIO
#endif

#if (MD_ENABLE_INTERNAL_AUDIO_BUZZER == ON) && (ENABLE_INTERNAL_AUDIO_BUZZER == OFF)
#error "MD_ENABLE_INTERNAL_AUDIO_BUZZER error!"
#else
#undef ENABLE_INTERNAL_AUDIO_BUZZER
#define ENABLE_INTERNAL_AUDIO_BUZZER MD_ENABLE_INTERNAL_AUDIO_BUZZER
#endif

#if (MD_ENABLE_OSD_WINDOWS == ON) && (ENABLE_OSD_WINDOWS == OFF)
#error "MD_ENABLE_OSD_WINDOWS error!"
#else
#undef ENABLE_OSD_WINDOWS
#define ENABLE_OSD_WINDOWS MD_ENABLE_OSD_WINDOWS
#endif

#if (MD_ENABLE_OSD_ROTATION == ON) && (ENABLE_OSD_ROTATION == OFF)
#error "MD_ENABLE_OSD_ROTATION error!"
#else
#undef ENABLE_OSD_ROTATION
#define ENABLE_OSD_ROTATION MD_ENABLE_OSD_ROTATION
#endif

#if (MD_ENABLE_OSD_MIRROR == ON) && (ENABLE_OSD_MIRROR == OFF)
#error "MD_ENABLE_OSD_MIRROR error!"
#else
#undef ENABLE_OSD_MIRROR
#define ENABLE_OSD_MIRROR MD_ENABLE_OSD_MIRROR
#endif

#if (MD_ENABLE_OSD_FLIP == ON) && (ENABLE_OSD_FLIP == OFF)
#error "MD_ENABLE_OSD_FLIP error!"
#else
#undef ENABLE_OSD_FLIP
#define ENABLE_OSD_FLIP MD_ENABLE_OSD_FLIP
#endif

#if (MD_ENABLE_INTERNAL_LDO == ON) && (ENABLE_INTERNAL_LDO == OFF)
#error "MD_ENABLE_INTERNAL_LDO error!"
#else
#undef ENABLE_INTERNAL_LDO
#define ENABLE_INTERNAL_LDO MD_ENABLE_INTERNAL_LDO
#endif

#if (MD_ENABLE_INTERNAL_ADC_LDO == ON) && (ENABLE_INTERNAL_ADC_LDO == OFF)
#error "MD_ENABLE_INTERNAL_ADC_LDO error!"
#else
#undef ENABLE_INTERNAL_ADC_LDO
#define ENABLE_INTERNAL_ADC_LDO MD_ENABLE_INTERNAL_ADC_LDO
#endif

#if (MD_ENABLE_INTERNAL_ADC_RES == ON) && (ENABLE_INTERNAL_ADC_RES == OFF)
#error "MD_ENABLE_INTERNAL_ADC_RES error!"
#else
#undef ENABLE_INTERNAL_ADC_RES
#define ENABLE_INTERNAL_ADC_RES MD_ENABLE_INTERNAL_ADC_RES
#endif

#if (MD_ENABLE_EMBEDDED_CHECKSUM == ON) && (ENABLE_EMBEDDED_CHECKSUM == OFF)
#error "MD_ENABLE_EMBEDDED_CHECKSUM error!"
#else
#undef ENABLE_EMBEDDED_CHECKSUM
#define ENABLE_EMBEDDED_CHECKSUM MD_ENABLE_EMBEDDED_CHECKSUM
#endif

#if (MD_ENABLE_OVERSCAN == ON) && (ENABLE_OVERSCAN == OFF)
#error "MD_ENABLE_OVERSCAN error!"
#else
#undef ENABLE_OVERSCAN
#define ENABLE_OVERSCAN MD_ENABLE_OVERSCAN
#endif

#if (MD_ENABLE_PWM_SMOOTH == ON) && (ENABLE_PWM_SMOOTH == OFF)
#error "MD_ENABLE_PWM_SMOOTH error!"
#else
#undef ENABLE_PWM_SMOOTH
#define ENABLE_PWM_SMOOTH MD_ENABLE_PWM_SMOOTH
#endif

#if (MD_ENABLE_FLASH_IDLE_MODE == ON) && (ENABLE_FLASH_IDLE_MODE == OFF)
#error "MD_ENABLE_FLASH_IDLE_MODE error!"
#else
#undef ENABLE_FLASH_IDLE_MODE
#define ENABLE_FLASH_IDLE_MODE MD_ENABLE_FLASH_IDLE_MODE
#endif

#if (MD_ENABLE_FIT_ALL_PANEL_SPEC == ON) && (ENABLE_FIT_ALL_PANEL_SPEC == OFF)
#error "MD_ENABLE_FIT_ALL_PANEL_SPEC error!"
#else
#undef ENABLE_FIT_ALL_PANEL_SPEC
#define ENABLE_FIT_ALL_PANEL_SPEC MD_ENABLE_FIT_ALL_PANEL_SPEC
#endif

#undef ENABLE_NR_BYTIMING
#define ENABLE_NR_BYTIMING MD_ENABLE_NR_BYTIMING

#if (MD_ENABLE_SCALER_3D == ON) && (ENABLE_SCALER_3D == OFF)
#error "MD_ENABLE_SCALER_3D error!"
#else
#undef ENABLE_SCALER_3D
#define ENABLE_SCALER_3D MD_ENABLE_SCALER_3D
#endif

#if (MD_ENABLE_3D_CNV == ON) && (ENABLE_3D_CNV == OFF)
#error "MD_ENABLE_3D_CNV error!"
#else
#undef ENABLE_3D_CNV
#define ENABLE_3D_CNV MD_ENABLE_3D_CNV
#endif

#if (MD_ENABLE_3D_CNV_120Hz == ON) && (ENABLE_3D_CNV_120Hz == OFF)
#error "MD_ENABLE_3D_CNV_120Hz error!"
#else
#undef ENABLE_3D_CNV_120Hz
#define ENABLE_3D_CNV_120Hz MD_ENABLE_3D_CNV_120Hz
#endif

#if (MD_ENABLE_SHUTTER_3D == ON) && (ENABLE_SHUTTER_3D == OFF)
#error "MD_ENABLE_SHUTTER_3D error!"
#else
#undef ENABLE_SHUTTER_3D
#define ENABLE_SHUTTER_3D MD_ENABLE_SHUTTER_3D
#endif

#if (MD_ENABLE_LD == ON) && (ENABLE_LD == OFF)
#error "MD_ENABLE_LD error!"
#else
#undef ENABLE_LD
#define ENABLE_LD MD_ENABLE_LD
#endif

#if (MD_ENABLE_SR == ON) && (ENABLE_SR == OFF)
#error "MD_ENABLE_SR error!"
#else
#undef ENABLE_SR
#define ENABLE_SR MD_ENABLE_SR
#endif

#if (MD_ENABLE_SELF_AUTOCOLOR == ON) && (ENABLE_SELF_AUTOCOLOR == OFF)
#error "MD_ENABLE_SELF_AUTOCOLOR error!"
#else
#undef ENABLE_SELF_AUTOCOLOR
#define ENABLE_SELF_AUTOCOLOR MD_ENABLE_SELF_AUTOCOLOR
#endif

#if (MD_ENABLE_HW_AUTOCOLOR == ON) && (ENABLE_HW_AUTOCOLOR == OFF)
#error "MD_ENABLE_HW_AUTOCOLOR error!"
#else
#undef ENABLE_HW_AUTOCOLOR
#define ENABLE_HW_AUTOCOLOR MD_ENABLE_HW_AUTOCOLOR
#endif

#if (MD_ENABLE_PREFRC == ON) && (MD_ENABLE_DFR == ON)
#error "MD_ENABLE_PREFRC ON, MD_ENABLE_DFR NEED SET OFF error!"
#else
#if (MD_ENABLE_PREFRC == ON) && (ENABLE_PREFRC == OFF)
#error "MD_ENABLE_PREFRC error!"
#else
#undef ENABLE_PREFRC
#define ENABLE_PREFRC MD_ENABLE_PREFRC
#endif

#if (MD_ENABLE_DFR == ON) && (ENABLE_DFR == OFF)
#error "MD_ENABLE_DFR error!"
#else
#undef ENABLE_DFR
#define ENABLE_DFR MD_ENABLE_DFR
#endif
#endif

#ifndef MD_ENABLE_STRESS_TEST_KEY
#define MD_ENABLE_STRESS_TEST_KEY OFF
#endif

#ifndef MD_ENABLE_AO_DETECT
#define MD_ENABLE_AO_DETECT OFF
#endif

#ifndef MD_ENABLE_DC2DC
#define MD_ENABLE_DC2DC OFF
#endif

#ifndef MD_ENABLE_STRESS_MCU_CLK
#define MD_ENABLE_STRESS_MCU_CLK OFF
#endif

#ifndef MD_ENABLE_DYNAMIC_OD
#define MD_ENABLE_DYNAMIC_OD OFF
#endif

#ifndef MD_ENABLE_EMBEDED_TMDS_CLOCK_TRAINING
#define MD_ENABLE_EMBEDED_TMDS_CLOCK_TRAINING OFF
#endif

#if OVER_SCAN_RATIO > 10
#error "OVER_SCAN_RATIO is over range! The range is 0 ~ 10."
#endif

#if MD_ENABLE_STRESS_MCU_CLK == ON
#undef MD_MCU_CLK_TIMES
#define MD_MCU_CLK_TIMES           6
//#undef MD_ENABLE_INTERNAL_LDO
//#define MD_ENABLE_INTERNAL_LDO ON
#endif

#if (MD_ENABLE_SCALER_LEDDRV_ANA_MODE == ON) && (ENABLE_SCALER_LEDDRV_ANA_MODE == OFF)
#error "MD_ENABLE_SCALER_LEDDRV_ANA_MODE error!"
#elif MD_ENABLE_LD == ON && MD_ENABLE_SCALER_LEDDRV_ANA_MODE == ON
#error "ENABLE LOCAL DIMMING OR ENABLE LEDDRV ANALOG DIMMING"
#else
#undef ENABLE_SCALER_LEDDRV_ANA_MODE
#define ENABLE_SCALER_LEDDRV_ANA_MODE MD_ENABLE_SCALER_LEDDRV_ANA_MODE
#endif


#if (MD_ENABLE_SCALER_LEDDRV == ON) && (ENABLE_SCALER_LEDDRV == OFF)
#error "MD_ENABLE_SCALER_LEDDRV error!"
#else
#undef ENABLE_SCALER_LEDDRV
#define ENABLE_SCALER_LEDDRV MD_ENABLE_SCALER_LEDDRV
#endif


#if (MD_ENABLE_SCALER_LEDDRV_IO_MODE == ON) && (ENABLE_SCALER_LEDDRV_IO_MODE == OFF)
#error "MD_ENABLE_SCALER_LEDDRV_IO_MODE error!"
#elif MD_ENABLE_SCALER_LEDDRV_IO_MODE == ON && MD_ENABLE_SCALER_LEDDRV == ON
#error "ENABLE_SCALER_LEDDRV_IO_MODE OR ENABLE_SCALER_LEDDRV"
#else
#undef ENABLE_SCALER_LEDDRV_IO_MODE
#define ENABLE_SCALER_LEDDRV_IO_MODE MD_ENABLE_SCALER_LEDDRV_IO_MODE
#endif

#if (MD_ENABLE_POSTFRC == ON) && (ENABLE_POSTFRC == OFF)
#error "MD_ENABLE_POSTFRC error!"
#else
#undef ENABLE_POSTFRC
#define ENABLE_POSTFRC MD_ENABLE_POSTFRC
#endif

#if (MD_ENABLE_AUTOFRAMEDOWN == ON) && (ENABLE_AUTOFRAMEDOWN == OFF)
#error "MD_ENABLE_AUTOFRAMEDOWN error!"
#else
#undef ENABLE_AUTOFRAMEDOWN
#define ENABLE_AUTOFRAMEDOWN MD_ENABLE_AUTOFRAMEDOWN
#endif

#if (MD_ENABLE_DVI_DUAL_LINK == ON) && (ENABLE_DVI_DUAL_LINK == OFF)
#error "MD_ENABLE_DVI_DUAL_LINK error!"
#else
#undef ENABLE_DVI_DUAL_LINK
#define ENABLE_DVI_DUAL_LINK MD_ENABLE_DVI_DUAL_LINK
#endif

#if (MD_ENABLE_USB_TYPE_C == ON) && (ENABLE_USB_TYPE_C == OFF)
#error "MD_ENABLE_USB_TYPE_C error!"
#else
#undef ENABLE_USB_TYPE_C
#define ENABLE_USB_TYPE_C MD_ENABLE_USB_TYPE_C
#endif

#if ((INPUT_INTERFACE&INPUT_MHL0) || (INPUT_INTERFACE&INPUT_MHL1)) && ((INPUT_INTERFACE&INPUT_MHL2) || (INPUT_INTERFACE&INPUT_MHL3))
#error "Only PHYA or PHYB could support MHL, error"
#endif


#define ENABLE_FUNC_OSD    MD_ENABLE_FUNC_OSD
#define ENABLE_DEMO_MHL_EDID MD_ENABLE_DEMO_MHL_EDID
#define ENABLE_DEMO_DP_EDID MD_ENABLE_DEMO_DP_EDID

#define ENABLE_ESD_PROTECT MD_ENABLE_ESD_PROTECT

#define ENABLE_DP_AUX_MONITOR MD_ENABLE_DP_AUX_MONITOR

#define ENABLE_EDP MD_ENABLE_EDP
#define ENABLE_FREESYNC_DEMO MD_ENABLE_FREESYNC_DEMO
#define ENABLE_CENTER_MODE MD_ENABLE_CENTER_MODE
#define ENABLE_DYNAMIC_OD MD_ENABLE_DYNAMIC_OD
#define ENABLE_MMU_DDR MD_ENABLE_MMU_DDR
#define ENABLE_EMBEDED_TMDS_CLOCK_TRAINING MD_ENABLE_EMBEDED_TMDS_CLOCK_TRAINING
#define ENABLE_FREESYNC_HDMI_FUNC MD_ENABLE_FREESYNC_HDMI_FUNC
#endif //__MODEL_VFY_H__
