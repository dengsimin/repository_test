C51 COMPILER V9.54   MAIN                                                                  01/06/2017 14:56:36 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Bin\Main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Sys\Main.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\App\OSD;.\App\U
                    -ser;.\Lib;.\Lib\NT68810 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;.\Phy\SI\NVT\Keypad
                    -;.\Sys;.\Sys\SI\NVT;.\Phy\SI\NVT\Keypad\NT68870_MODULE_KEYPAD) DEFINE(SCALER_TYPE=NT68870,NT68870_MODULE,LVIEW_2560X1440
                    -,FLASH_BANK=8) PRINT(.\Lst\Main.lst) TABS(2) OBJECT(.\Bin\Main.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                                 */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          #include "Warning.h"
*** WARNING C320 IN LINE 23 OF Sys\Warning.h: "The HDCP demo key is enabled!"
*** WARNING C320 IN LINE 26 OF Sys\Warning.h: "The Novatek HDCP Key receiver is enabled!"
*** WARNING C320 IN LINE 35 OF Sys\Warning.h: "The DP demo EDID is enabled!"
*** WARNING C320 IN LINE 38 OF Sys\Warning.h: "The MHL demo EDID is enabled!"
*** WARNING C320 IN LINE 44 OF Sys\Warning.h: "The FE2P Normal Mode is enabled!"
  14          
  15          //******************************************************************************
  16          // M A C R O   D E F I N I T I O N S
  17          //******************************************************************************
  18          code UCHAR NoDuplicate[] = {0x55,0xAA,0x66,0x99,'N','O','C','O','P','Y'};
  19          //******************************************************************************
  20          // G L O B A L   V A R I A B L E S
  21          //******************************************************************************
  22          
  23          //******************************************************************************
  24          // S T A T I C   V A R I A B L E S
  25          //******************************************************************************
  26          
  27          //******************************************************************************
  28          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  29          //******************************************************************************
  30          
  31          //******************************************************************************
  32          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  33          //******************************************************************************
  34          #if ENABLE_HDCP_TRIM_MODE == ON || ENABLE_EDID_TRIM_MODE == ON
  35          static USHRT ReadScalerID(void);
  36          #endif
  37          #if ENABLE_ESD_PROTECT == ON
              static void ESD_CHECK(void);
              #endif
  40          //******************************************************************************
  41          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  42          //******************************************************************************
  43          
  44          //******************************************************************************
  45          // F U N C T I O N   B O D Y S
  46          //******************************************************************************
  47          
C51 COMPILER V9.54   MAIN                                                                  01/06/2017 14:56:36 PAGE 2   

  48          /**************************************************************************//**
  49           * The entry point of FALCON.
  50           * This function will be called by startup.a51.
  51           ******************************************************************************/
  52          
  53          void main(void)
  54          {
  55   1          // According to our MCU spec, we must set the type of bank allocation first.
  56   1          // Therefore, we set BankSet(0x22) first. (We MUST set it first!)
  57   1          BankSet(0x22);
  58   1          DisableInterrupt();
  59   1      #if ENABLE_HDCP_TRIM_MODE == ON || ENABLE_EDID_TRIM_MODE == ON
  60   1          ucEFUSE_ID = (UCHAR)(ReadScalerID()>>8);
  61   1      #endif
  62   1          McuInitialize();
  63   1      
  64   1      #if IS_NT68790_SERIES || IS_NT68810_SERIES || IS_NT68870_SERIES
  65   1          ConfigHPD();
  66   1      #endif
  67   1      #if (ENABLE_DIGI3_HPD == ON) ||(ENABLE_DIGI2_HPD == ON) ||(ENABLE_DIGI1_HPD == ON) || (ENABLE_DIGI0_HPD ==
             - ON) || (ENABLE_DP_HPD == ON) || (ENABLE_DP1_HPD == ON) || (ENABLE_DP2_HPD == ON) || (ENABLE_DP3_HPD == ON)
  68   1          SYSAPI_PerformHPDOff(TRUE);// AC off/on set hot plug Pin off(Low)
  69   1      #endif
  70   1          RamInitialize();
  71   1          EnableInterrupt();
  72   1          ScalerInitialize();
  73   1      #if 0//ENABLE_USB_TYPE_C == ON
                  USBTypeCInit(); // Yung add usb type C
              #endif
  76   1          NvramLoadData();
  77   1          Custom_System_Init();
  78   1          APPInitSystem();
  79   1      #if MCU_UART_OUTPUT != 0    
                  printf("Start Program\r\n");
              #endif
  82   1          //DBGPRN1(PRN_SYS_Flow, "Start Program\r\n");
  83   1          while (1) {
  84   2              ResetWDTimer();
  85   2              ModeHandler();
  86   2              EventHandler();
  87   2              SYSAPI_CheckSysPower();
  88   2      
  89   2      {
  90   3        
  91   3        void Set6502Active(UCHAR phyindex);
  92   3          if(SC_ADC_CLAMP_CTRL) // feng-160908   dp-test
  93   3            {
  94   4            SC_ADC_CLAMP_CTRL =0;
  95   4              Set6502Active(_DPPP_PHY0);
  96   4            }
  97   3      }
  98   2          
  99   2      #if ENABLE_ESD_PROTECT == ON
                      ESD_CHECK();
              #endif
 102   2      #if (((INPUT_INTERFACE&INPUT_DP)||(INPUT_INTERFACE&INPUT_DP1)||(INPUT_INTERFACE&INPUT_DP2)||(INPUT_INTERFA
             -CE&INPUT_DP3))  && ENABLE_DP_AUX_MONITOR==ON)     
                     DP_Aux_Channel_Monitor();    
              #endif   
 105   2          }
 106   1      }
 107          
C51 COMPILER V9.54   MAIN                                                                  01/06/2017 14:56:36 PAGE 3   

 108          #if ENABLE_HDCP_TRIM_MODE == ON || ENABLE_EDID_TRIM_MODE == ON
 109          //NT68850=0x0B
 110          //NT68770=0x0C
 111          //NT68655=0x0D
 112          USHRT ReadScalerID(void)
 113          { 
 114   1      USHRT scaler_id = 0x0000;
 115   1      UCHAR tmp_0xF04C, tmp_0x8D55, tmp_0x8D50, tmp_0x8101, tmp_0x8102, tmp_0x8641;
 116   1      //12MHz
 117   1          SC_ADC_ZERO_POWER_CTRL |= 0x81;// 0xb57
 118   1          tmp_0xF04C = CPU_CLK;
 119   1          CPU_CLK = 0x10;
 120   1          tmp_0x8101 = SC_POWER_CTRL1;
 121   1          SC_POWER_CTRL1 = 0x00;
 122   1          tmp_0x8102 = SC_POWER_CTRL2;// 0x102
 123   1          SC_POWER_CTRL2 |= BIT1;// 0x102
 124   1          tmp_0x8641 = SC_HDCP_INPUT_CTRL;// 0x641
 125   1      #if IS_NT68790_SERIES_EARLIER
                  SC_HDCP_INPUT_CTRL |= BIT7;// 0x641
              #endif
 128   1      //
 129   1          tmp_0x8D55 = SC_HDCP_TRIM_CTRL2; // 0xd55
 130   1      #if defined(ENABLE_FPGA_MODE)
                  SC_HDCP_TRIM_CTRL2 |= BIT6; // 0xd55
              #else
 133   1          SC_HDCP_TRIM_CTRL2 &= ~BIT6; // 0xd55
 134   1      #endif
 135   1      // 
 136   1          tmp_0x8D50 = SC_HDCP_TRIM_CTRL;// 0xd50
 137   1          SC_HDCP_TRIM_CTRL |= BIT0;// 0xd50
 138   1          SC_HDCP_TRIM_CTRL &= ~BIT1;// 0xd50
 139   1      #if IS_NT68810_SERIES || IS_NT68870_SERIES    
 140   1          SC_HDCP_TRIM_CTRL |= BIT2; // 0xd50
 141   1          SC_HDCP_TRIM_TEST_MODE |= BIT7;// 0xd58
 142   1          SC_HDCP_TRIM_PI |= BIT0;// 0xd5f
 143   1      #endif
 144   1      
 145   1      //read scaler id
 146   1      #if IS_NT68810_SERIES || IS_NT68870_SERIES  
 147   1          SC_HDCP_TRIM_ADDR_B = 0x00;// 0xd5c
 148   1          SC_HDCP_TRIM_ADDR_A = 0x91;// 0xd5b
 149   1          SC_HDCP_TRIM_ADDR_B = 0x20; // read pulse// 0xd5c
 150   1          SC_HDCP_TRIM_ADDR_B = 0x00;// 0xd5c
 151   1      #else
              //address
                  SC_HDCP_TRIM_ADDR = 0x91;// 0xd51
              //read enable
                  SC_HDCP_TRIM_CTRL |= BIT6;// 0xd50
              #endif
 157   1      
 158   1      #if IS_NT68810_SERIES || IS_NT68870_SERIES 
 159   1      //read data hi
 160   1          scaler_id = SC_HDCP_TRIM_DATA_HI;  // 0xd53
 161   1          scaler_id <<= 8;
 162   1      //read data lo
 163   1          scaler_id |= SC_HDCP_TRIM_DATA_LO;// 0xd52
 164   1      #else
              //read data hi
                  scaler_id = SC_HDCP_TRIM_DATA_HI;// 0xd53
                  scaler_id <<= 8;
              //read data lo
                  if((SC_HDCP_TRIM_DATA_LO & 0x0F) == 0x0F) {// 0xd52
C51 COMPILER V9.54   MAIN                                                                  01/06/2017 14:56:36 PAGE 4   

                      scaler_id |= (SC_HDCP_TRIM_DATA_LO>>4);// 0xd52
                  }
                  else {
                      scaler_id |= SC_HDCP_TRIM_DATA_LO;// 0xd52
                  }
              #endif
 176   1          
 177   1      #if IS_NT68810_SERIES || IS_NT68870_SERIES  
 178   1          //efuse mapping LED curr and OVP, need before LED drivier enable
 179   1          SC_HDCP_TRIM_ADDR_B = 0x00;// 0xd5c
 180   1          SC_HDCP_TRIM_ADDR_A = 0x90; // addr for LED_CURR and LED_OVP   // 0xd5b
 181   1          SC_HDCP_TRIM_ADDR_B = 0x20; // read pulse// 0xd5c
 182   1          SC_HDCP_TRIM_ADDR_B = 0x00;// 0xd5c
 183   1          ucLEDTRIM_HI = SC_HDCP_TRIM_DATA_HI;// 0xd53
 184   1          ucLEDTRIM_LO = SC_HDCP_TRIM_DATA_LO; // 0xd52
 185   1      
 186   1          //efuse mapping ADC07, need before internal 0.7V enable
 187   1          SC_HDCP_TRIM_ADDR_B = 0x00;// 0xd5c
 188   1          SC_HDCP_TRIM_ADDR_A = 0x92; // addr for ADC07   // 0xd5b
 189   1          SC_HDCP_TRIM_ADDR_B = 0x20; // read pulse// 0xd5c
 190   1          SC_HDCP_TRIM_ADDR_B = 0x00;// 0xd5c
 191   1          ucADCTRIM_SEL = SC_HDCP_TRIM_DATA_HI;// 0xd53
 192   1          ucADCTRIM = SC_HDCP_TRIM_DATA_LO; // 0xd52
 193   1      
 194   1          LoadDefaultTrim();
 195   1      #endif  
 196   1          
 197   1          SC_HDCP_TRIM_CTRL = tmp_0x8D50;// 0xd50
 198   1          SC_HDCP_TRIM_CTRL2 = tmp_0x8D55; // 0xd55
 199   1          CPU_CLK = tmp_0xF04C;
 200   1          SC_HDCP_INPUT_CTRL = tmp_0x8641;// 0x641
 201   1          SC_POWER_CTRL1 = tmp_0x8101;
 202   1          SC_POWER_CTRL2 = tmp_0x8102;// 0x102
 203   1          return scaler_id; 
 204   1      } 
 205          #endif
 206          
 207          #if ENABLE_ESD_PROTECT == ON
              void ESD_CHECK(void)
              {
                  static UCHAR ucPreOSDRAMCheckSum;
                  UCHAR ucNowOSDRAMCheckSum;
                  if (IsBackLightOn() == TRUE) {
                      if (SC_INDEX_CTRL != 0x8C) {// read OSD SRAM
                          ucNowOSDRAMCheckSum = ReadOSDCheckSum();
                          ucPreOSDRAMCheckSum = ucNowOSDRAMCheckSum;
              //            printf("OSDRAMCheckSumN1=%x\r\n", (USHRT)ucNowOSDRAMCheckSum);
                      }
                      else {
                          ucNowOSDRAMCheckSum = ReadOSDCheckSum();
              //            printf("OSDRAMCheckSumN2=%x\r\n", (USHRT)ucNowOSDRAMCheckSum);
                          if (ucPreOSDRAMCheckSum != ucNowOSDRAMCheckSum) {
              //                printf("ucPreOSDRAMCheckSum=%x\r\n", (USHRT)ucPreOSDRAMCheckSum);
              //                printf("ucNowOSDRAMCheckSum=%x\r\n", (USHRT)ucNowOSDRAMCheckSum);
                              ucPreOSDRAMCheckSum = ucNowOSDRAMCheckSum;
                              //Error////////////////////////////////////////////
                              while(1){};
                              ///////////////////////////////////////////////////
                          }
                      }
              
                  }
C51 COMPILER V9.54   MAIN                                                                  01/06/2017 14:56:36 PAGE 5   

                  else {
                      ClearESDCKStatus();
                  }
              #if 1
                  CLR_WDT2 = 0x55;
                  WDT2_SEL = WDT2SELECT;
              #endif
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    358    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
