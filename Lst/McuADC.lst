C51 COMPILER V9.54   MCUADC                                                                01/06/2017 14:56:43 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MCUADC
OBJECT MODULE PLACED IN .\Bin\McuADC.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Lib\McuADC.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\App\OSD;.\App
                    -\User;.\Lib;.\Lib\NT68810 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;.\Phy\SI\NVT\Keyp
                    -ad;.\Sys;.\Sys\SI\NVT;.\Phy\SI\NVT\Keypad\NT68870_MODULE_KEYPAD) DEFINE(SCALER_TYPE=NT68870,NT68870_MODULE,LVIEW_2560X14
                    -40,FLASH_BANK=8) PRINT(.\Lst\McuADC.lst) TABS(2) OBJECT(.\Bin\McuADC.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          
  14          //******************************************************************************
  15          // M A C R O   D E F I N I T I O N S
  16          //******************************************************************************
  17          
  18          //******************************************************************************
  19          // G L O B A L   V A R I A B L E S
  20          //******************************************************************************
  21          
  22          //******************************************************************************
  23          // S T A T I C   V A R I A B L E S
  24          //******************************************************************************
  25          
  26          //******************************************************************************
  27          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  28          //******************************************************************************
  29          
  30          //******************************************************************************
  31          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  32          //******************************************************************************
  33          
  34          //******************************************************************************
  35          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  36          //******************************************************************************
  37          
  38          //******************************************************************************
  39          // F U N C T I O N   B O D Y S
  40          //******************************************************************************
  41          
  42          /**************************************************************************//**
  43           * Turn on MCU ADC.
  44           * @param mask Each bit indicates one ADC channel, Bit 0: ADC0, Bit 1: ADC1, ..., Bit 7: DDC7.
  45           ******************************************************************************/
  46          void McuEnableADC(UCHAR mask)
  47          {
  48   1          if (mask & BIT0) {
  49   2              ADC_CON |= BIT0; //Enable ADC 0
  50   2          }
  51   1          if (mask & BIT1) {
  52   2              ADC_CON |= BIT1; //Enable ADC 1
C51 COMPILER V9.54   MCUADC                                                                01/06/2017 14:56:43 PAGE 2   

  53   2          }
  54   1          if (mask & BIT2) {
  55   2              ADC_CON |= BIT2; //Enable ADC 2
  56   2          }
  57   1          if (mask & BIT3) {
  58   2              ADC_CON |= BIT3; //Enable ADC 3
  59   2          }
  60   1          if (mask & BIT4) {
  61   2              ADC_CON2 |= BIT0; //Enable ADC 4
  62   2          }
  63   1          if (mask & BIT5) {
  64   2              ADC_CON2 |= BIT1; //Enable ADC 5
  65   2          }
  66   1          if (mask & BIT6) {
  67   2              ADC_CON2 |= BIT2; //Enable ADC 6
  68   2          }
  69   1          if (mask & BIT7) {
  70   2              ADC_CON2 |= BIT3; //Enable ADC 7
  71   2          }
  72   1      }
  73          
  74          /**************************************************************************//**
  75           * Turn off MCU ADC.
  76           * @param mask Each bit indicates one ADC channel, Bit 0: ADC0, Bit 1: ADC1, ..., Bit 7: DDC7.
  77           ******************************************************************************/
  78          void McuDisableADC(UCHAR mask)
  79          {
  80   1          if (mask & BIT0) {
  81   2              ADC_CON &= ~BIT0; //Disable ADC 0
  82   2          }
  83   1          if (mask & BIT1) {
  84   2              ADC_CON &= ~BIT1; //Disable ADC 1
  85   2          }
  86   1          if (mask & BIT2) {
  87   2              ADC_CON &= ~BIT2; //Disable ADC 2
  88   2          }
  89   1          if (mask & BIT3) {
  90   2              ADC_CON &= ~BIT3; //Disable ADC 3
  91   2          }
  92   1          if (mask & BIT4) {
  93   2              ADC_CON2 &= ~BIT0; //Disable ADC 4
  94   2          }
  95   1          if (mask & BIT5) {
  96   2              ADC_CON2 &= ~BIT1; //Disable ADC 5
  97   2          }
  98   1          if (mask & BIT6) {
  99   2              ADC_CON2 &= ~BIT2; //Disable ADC 6
 100   2          }
 101   1          if (mask & BIT7) {
 102   2              ADC_CON2 &= ~BIT3; //Disable ADC 7
 103   2          }
 104   1      }
 105          
 106          /**************************************************************************//**
 107           * Start to convert analog signal into a 7-bits digital code.
 108           ******************************************************************************/
 109          void McuStartADC(void)
 110          {
 111   1          ADC_CON |= BIT7;
 112   1      }
 113          
 114          /**************************************************************************//**
C51 COMPILER V9.54   MCUADC                                                                01/06/2017 14:56:43 PAGE 3   

 115           * Wait until the ADC complete A/D conversion.
 116           ******************************************************************************/
 117          void McuWaitADCComplete(void)
 118          {
 119   1      #if IS_NT68168_SERIES
              #define ADC_CONVERT_READY   ((ADC_CON&BIT7)!=0)
              #else
 122   1      #define ADC_CONVERT_READY   ((ADC_REG3&BIT7)!=0)
 123   1      #endif
 124   1      
 125   1          while (ADC_CONVERT_READY == 0) {
 126   2              // Remove WDT reset to avoid system handing over here if ADC were abnormal.
 127   2              // So far, this issue never happened.
 128   2              // Jude 2011/06/10
 129   2              //ResetWDTimer();
 130   2          }
 131   1      }
 132          
 133          /**************************************************************************//**
 134           * Get the value of specified ADC channel.
 135           * @param channel ADC channel.
 136           * @return ADC value.
 137           ******************************************************************************/
 138          UCHAR McuGetADC(UCHAR channel)
 139          {
 140   1          UCHAR result;
 141   1      
 142   1          switch (channel) {
 143   2              case MCU_ADC_0:
 144   2                  result = (ADC_REG0&0x7F);// 0xf00c
 145   2                  break;
 146   2      
 147   2              case MCU_ADC_1:
 148   2                  result = (ADC_REG1&0x7F);
 149   2                  break;
 150   2      
 151   2              case MCU_ADC_2:
 152   2                  result = (ADC_REG2&0x7F);
 153   2                  break;
 154   2      
 155   2              case MCU_ADC_3:
 156   2                  result = (ADC_REG3&0x7F);
 157   2                  break;
 158   2      
 159   2              case MCU_ADC_4:
 160   2                  result = (ADC_REG4&0x7F);
 161   2                  break;
 162   2      
 163   2              case MCU_ADC_5:
 164   2                  result = (ADC_REG5&0x7F);
 165   2                  break;
 166   2      
 167   2              case MCU_ADC_6:
 168   2                  result = (ADC_REG6&0x7F);
 169   2                  break;
 170   2      
 171   2              case MCU_ADC_7:
 172   2                  result = (ADC_REG7&0x7F);
 173   2                  break;
 174   2              default :
 175   2                  result = 0x7F;
 176   2                  break;
C51 COMPILER V9.54   MCUADC                                                                01/06/2017 14:56:43 PAGE 4   

 177   2          }
 178   1          
 179   1          return result;
 180   1      }
 181          
 182          /**************************************************************************//**
 183           * Turn on MCU ADC power.
 184           ******************************************************************************/
 185          void McuPowerUpADC(void)
 186          {
 187   1          LDO_ADJ |= BIT4;
 188   1      }
 189          
 190          /**************************************************************************//**
 191           * Turn off MCU ADC power.
 192           ******************************************************************************/
 193          void McuPowerDownADC(void)
 194          {
 195   1          LDO_ADJ &= ~BIT4;
 196   1      }
 197          
 198          #if IS_NT68770_SERIES_LATER && !IS_NT68661_SERIES
 199          #if !lrd_dis
              void SetADC5VRange(UCHAR channel)
              {
                  switch (channel) {
                      case MCU_ADC_0:
                          ADC_5V_EN |= BIT0;
                          break;
              
                      case MCU_ADC_1:
                          ADC_5V_EN |= BIT1;
                          break;
              
                      case MCU_ADC_2:
                          ADC_5V_EN |= BIT2;
                          break;
              
                      case MCU_ADC_3:
                          ADC_5V_EN |= BIT3;
                          break;
              
                      case MCU_ADC_4:
                          ADC_5V_EN |= BIT4;
                          break;
              
                      case MCU_ADC_5:
                          ADC_5V_EN |= BIT5;
                          break;
              
                      case MCU_ADC_6:
                          ADC_5V_EN |= BIT6;
                          break;
                  }
              }
              #endif
 233          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    317    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   MCUADC                                                                01/06/2017 14:56:43 PAGE 5   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
