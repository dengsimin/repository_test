C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BOARD
OBJECT MODULE PLACED IN .\Bin\Board.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Phy\SI\NVT\Board\Board.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\A
                    -pp\OSD;.\App\User;.\Lib;.\Lib\NT68810 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;.\Phy
                    -\SI\NVT\Keypad;.\Sys;.\Sys\SI\NVT;.\Phy\SI\NVT\Keypad\NT68870_MODULE_KEYPAD) DEFINE(SCALER_TYPE=NT68870,NT68870_MODULE,L
                    -VIEW_2560X1440,FLASH_BANK=8) PRINT(.\Lst\Board.lst) TABS(2) OBJECT(.\Bin\Board.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          
  14          //******************************************************************************
  15          // G L O B A L   D E F I N I T I O N S
  16          //******************************************************************************
  17          
  18          //******************************************************************************
  19          // G L O B A L   V A R I A B L E S
  20          //******************************************************************************
  21          
  22          //******************************************************************************
  23          // S T A T I C   V A R I A B L E S
  24          //******************************************************************************
  25          #if PANEL_POWER_PORT == MCU_PORT_NULL
              static bit bPanelPower = (~PANEL_POWER_ACTIVE & BIT0);
              #endif
  28          //******************************************************************************
  29          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  30          //******************************************************************************
  31          
  32          //******************************************************************************
  33          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  34          //******************************************************************************
  35          
  36          //******************************************************************************
  37          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  38          //******************************************************************************
  39          
  40          
  41          //******************************************************************************
  42          // Prototype: 
  43          //  BOOL bIsCableConnect(void)
  44          // Parameters:
  45          //  None
  46          // Return:
  47          //  TRUE/FALSE
  48          // Purpose:
  49          //  Determine the cable connection
  50          // Notes:
  51          //  None
  52          //******************************************************************************
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 2   

  53          BOOL bIsCableConnect(void)
  54          {
  55   1      #if defined(ENABLE_FPGA_MODE)
                  return 1;
              #else
  58   1          UCHAR i = 0;
  59   1      #if INPUT_INTERFACE&INPUT_VGA0
                  if (bIsVGAConnect() == TRUE) {
                      i++;
                  }
              #endif
  64   1      #if INPUT_INTERFACE&INPUT_DIG0
                  if (IsDigital0Connect() == TRUE) {
                      i++;
                  }
              #endif
  69   1      #if INPUT_INTERFACE&INPUT_DIG1 //dvi 
  70   1          if (IsDigital1Connect() == TRUE) {
  71   2              i++;
  72   2          }
  73   1      #endif
  74   1      #if INPUT_INTERFACE&INPUT_DIG2 
  75   1          if (IsDigital2Connect() == TRUE) {
  76   2              i++;
  77   2          }
  78   1      #endif
  79   1      #if INPUT_INTERFACE&INPUT_DIG3 //hdmi
  80   1          if (IsDigital3Connect() == TRUE) {
  81   2              i++;
  82   2          }
  83   1      #endif
  84   1      #if INPUT_INTERFACE&INPUT_DP   // dp
  85   1          if (IsDPConnect() == TRUE) {
  86   2              i++;
  87   2          }
  88   1      #endif
  89   1      #if INPUT_INTERFACE&INPUT_DP1
                  if (IsDP1Connect() == TRUE) {
                      i++;
                  }
              #endif
  94   1      #if INPUT_INTERFACE&INPUT_DP2
                  if (IsDP2Connect() == TRUE) {
                      i++;
                  }
              #endif
  99   1      #if INPUT_INTERFACE&INPUT_DP3
                  if (IsDP3Connect() == TRUE) {
                      i++;
                  }
              #endif
 104   1      //    return (bIsVGAConnect() | IsDigital1Connect() | IsDigital0Connect() | IsDPConnect() | IsDP1Connect()
             -);
 105   1          if (i != 0) {
 106   2              return TRUE;
 107   2          }
 108   1          else {
 109   2              return FALSE;
 110   2          }
 111   1      #endif
 112   1      }
 113          
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 3   

 114          //******************************************************************************
 115          // Prototype: 
 116          //  BOOL bIsVGAConnect(void)
 117          // Parameters:
 118          //  None
 119          // Return:
 120          //  TRUE/FALSE
 121          // Purpose:
 122          //  Determine the VGA cable connection
 123          // Notes:
 124          //  None
 125          //******************************************************************************
 126          #if !lrd_dis
              BOOL bIsVGAConnect(void)
              {
              #if VGA_CABLE_PORT == MCU_PORT_NULL
              #if IS_NT68150_SERIES
                  UCHAR level;
                  SetADC5VRange(VGA_DET_ADC);//5V ADC
                  McuPowerUpADC();
                  McuStartADC();
                  McuWaitADCComplete();
                  McuPowerDownADC();
                  level = McuGetADC(VGA_DET_ADC);
                  if (level > VGA_DET_LEVEL) {
                      return FALSE;
                  }
                  else {
                      return TRUE;
                  }
              #elif IS_NT68658_SERIES
                  UCHAR level;
              //    SetADC5VRange(VGA_DET_ADC);//5V ADC
                  McuPowerUpADC();
                  McuStartADC();
                  McuWaitADCComplete();
                  McuPowerDownADC();
                  level = McuGetADC(VGA_DET_ADC);
                  if (level > VGA_DET_LEVEL) {
                      return FALSE;
                  }
                  else {
                      return TRUE;
                  }
              #else
                  return FALSE;
              #endif
              #else
                  if (McuGetIOBit(VGA_CABLE_PORT, VGA_CABLE_BIT) == VGA_CABLE_ACTIVE) {
                      return TRUE;
                  }
                  else {
                      return FALSE;
                  }
              #endif
              }
              #endif
 171          #if INPUT_INTERFACE&INPUT_DIG2
 172          //******************************************************************************
 173          // Prototype: 
 174          //  BOOL IsDigital2Connect(void)
 175          // Parameters:
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 4   

 176          //  None
 177          // Return:
 178          //  TRUE/FALSE
 179          // Purpose:
 180          //  Determine the digital interface 1 cable connection
 181          // Notes:
 182          //  None
 183          //******************************************************************************
 184          BOOL IsDigital2Connect(void)
 185          {
 186   1        BOOL bConFlag;
 187   1        bConFlag = FALSE;
 188   1      #if DIGI2_CABLE_PORT != MCU_PORT_NULL // ºê lrd add
                  if (McuGetIOBit(DIGI2_CABLE_PORT, DIGI2_CABLE_BIT) == DIGI2_CABLE_ACTIVE) {
                      bConFlag = TRUE;
                  }
              #if (INPUT_INTERFACE&INPUT_MHL2)
                if (MHL_Is_CDSense1_IO_HIGH())
                {
                      if (IsMHL0Connect()) {
                    bConFlag = TRUE;
                      }
                } 
              #endif
              #endif
 201   1          return bConFlag;
 202   1      }
 203          #endif
 204          
 205          #if INPUT_INTERFACE&INPUT_DIG3
 206          //******************************************************************************
 207          // Prototype: 
 208          //  BOOL IsDigital3Connect(void)
 209          // Parameters:
 210          //  None
 211          // Return:
 212          //  TRUE/FALSE
 213          // Purpose:
 214          //  Determine the digital interface 1 cable connection
 215          // Notes:
 216          //  None
 217          //******************************************************************************
 218          BOOL IsDigital3Connect(void)
 219          {
 220   1        BOOL bConFlag;
 221   1        bConFlag = FALSE;
 222   1          if (McuGetIOBit(DIGI3_CABLE_PORT, DIGI3_CABLE_BIT) == DIGI3_CABLE_ACTIVE) {
 223   2              bConFlag = TRUE;
 224   2          }
 225   1      #if (INPUT_INTERFACE&INPUT_MHL3)
                if (MHL_Is_CDSense2_IO_HIGH())
                {
                      if (IsMHL1Connect()) {
                    bConFlag = TRUE;
                      }
                } 
              #endif
 233   1          return bConFlag;
 234   1      }
 235          #endif
 236          //******************************************************************************
 237          // Prototype: 
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 5   

 238          //  BOOL IsDigital1Connect(void)
 239          // Parameters:
 240          //  None
 241          // Return:
 242          //  TRUE/FALSE
 243          // Purpose:
 244          //  Determine the digital interface 1 cable connection
 245          // Notes:
 246          //  None
 247          //******************************************************************************
 248          BOOL IsDigital1Connect(void)
 249          {
 250   1      #if DIGI1_CABLE_PORT == MCU_PORT_NULL
              #ifdef CABLE_DET_PORT
                  UCHAR level;
              //    SetADC5VRange(VGA_DET_ADC);//5V ADC
                  McuPowerUpADC();
                  McuStartADC();
                  McuWaitADCComplete();
                  McuPowerDownADC();
                  level = McuGetADC(CABLE_DET_PORT);
                  if ((abs(HDMI_CABLE_LEVE-level) < 10) || (abs(BOTH_ON_LEVE-level) < 10)){
                      return TRUE;
                  }
                  else {
                      return FALSE;
                  }
              #else
                  return FALSE;
              #endif
              #else
 269   1      #if IS_NT68810_SERIES || IS_NT68870_SERIES
 270   1        BOOL bConFlag;
 271   1        bConFlag = FALSE;
 272   1          if (McuGetIOBit(DIGI1_CABLE_PORT, DIGI1_CABLE_BIT) == DIGI1_CABLE_ACTIVE) {
 273   2              bConFlag = TRUE;
 274   2          }
 275   1        #if (INPUT_INTERFACE&INPUT_MHL1)
                if (MHL_Is_CDSense2_IO_HIGH())
                {
                      if (IsMHL1Connect()) {
                    bConFlag = TRUE;
                      }
                } 
                #endif
 283   1          return bConFlag;
 284   1      #else
                  if (McuGetIOBit(DIGI1_CABLE_PORT, DIGI1_CABLE_BIT) == DIGI1_CABLE_ACTIVE) {
              #if (INPUT_INTERFACE&INPUT_MHL1)
                      if ( MHLIsCBus2On() == ON && !IsMHL1Connect()) {
                          return FALSE;
                      }
              #endif
                      return TRUE;
                  }
                  else {
                      return FALSE;
                  }
              #endif
 297   1      #endif
 298   1      }
 299          
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 6   

 300          //******************************************************************************
 301          // Prototype: 
 302          //  BOOL IsDigital0Connect(void)
 303          // Parameters:
 304          //  None
 305          // Return:
 306          //  TRUE/FALSE
 307          // Purpose:
 308          //  Determine the digital interface 0 cable connection
 309          // Notes:
 310          //  None
 311          //******************************************************************************
 312          #if !lrd_dis
              BOOL IsDigital0Connect(void)
              {
              #if DIGI0_CABLE_PORT == MCU_PORT_NULL
              #if IS_NT68658_SERIES||IS_NT68360_SERIES
                  UCHAR level;
              //    SetADC5VRange(DIGI0_DET_ADC);//5V ADC
                  McuPowerUpADC();
                  McuStartADC();
                  McuWaitADCComplete();
                  McuPowerDownADC();
                  level = McuGetADC(DIGI0_DET_ADC);
                  if (level > DIGI0_DET_LEVEL) {
                      return FALSE;
                  }
                  else {
                      return TRUE;
                  }
              #else
              #ifdef CABLE_DET_PORT
                  UCHAR level;
              //    SetADC5VRange(VGA_DET_ADC);//5V ADC
                  McuPowerUpADC();
                  McuStartADC();
                  McuWaitADCComplete();
                  McuPowerDownADC();
                  level = McuGetADC(CABLE_DET_PORT);
                  if ((abs(HDMI_CABLE_LEVE-level) < 10) || (abs(BOTH_ON_LEVE-level) < 10)){
                      return TRUE;
                  }
                  else {
                      return FALSE;
                  }
              #else
                  return FALSE;
              #endif
              #endif
              
              #else
              #if IS_NT68810_SERIES || IS_NT68870_SERIES
                BOOL bConFlag;
                bConFlag = FALSE;
                  if (McuGetIOBit(DIGI0_CABLE_PORT, DIGI0_CABLE_BIT) == DIGI0_CABLE_ACTIVE) {
                  bConFlag = TRUE;
                  }
              #if (INPUT_INTERFACE&INPUT_MHL0)
                if (MHL_Is_CDSense1_IO_HIGH())
                {
                      if (IsMHL0Connect()) {
                    bConFlag = TRUE;
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 7   

                      }
                } 
              #endif
                  return bConFlag;
              #else
                  if (McuGetIOBit(DIGI0_CABLE_PORT, DIGI0_CABLE_BIT) == DIGI0_CABLE_ACTIVE) {
              #if (INPUT_INTERFACE&INPUT_MHL0)
                    if ( MHLIsCBus1On() == ON && !IsMHL0Connect()) {
                      return FALSE;
                  }
              #endif
                      return TRUE;
                  }
                  else {
                    return FALSE;
                  }
              #endif
              #endif
              }
              #endif
 382          //******************************************************************************
 383          // Prototype: 
 384          //  BOOL IsDPConnect(void)
 385          // Parameters:
 386          //  None
 387          // Return:
 388          //  TRUE/FALSE
 389          // Purpose:
 390          //  Determine the DP interface cable connection
 391          // Notes:
 392          //  None
 393          //******************************************************************************
 394          BOOL IsDPConnect(void)
 395          {
 396   1      #if (INPUT_INTERFACE&INPUT_DP)
 397   1      #if DP_CABLE_PORT == MCU_PORT_NULL
              #ifdef CABLE_DET_PORT
                  UCHAR level;
              //    SetADC5VRange(VGA_DET_ADC);//5V ADC
                  McuPowerUpADC();
                  McuStartADC();
                  McuWaitADCComplete();
                  McuPowerDownADC();
                  level = McuGetADC(CABLE_DET_PORT);
                  if ((abs(DP_CABLE_LEVE-level) < 10) || (abs(BOTH_ON_LEVE-level) < 10)){
                      return TRUE;
                  }
                  else {
                      return FALSE;
                  }
              #else
                  return FALSE;
              #endif
              #else
 416   1          if (McuGetIOBit(DP_CABLE_PORT, DP_CABLE_BIT) == DP_CABLE_ACTIVE) {
 417   2              return TRUE;
 418   2          }
 419   1          else {
 420   2              return FALSE;
 421   2          }
 422   1      #endif
 423   1      #else
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 8   

                  return FALSE;
              #endif
 426   1      }
 427          #if !lrd_dis
              
              BOOL IsDP1Connect(void)
              {
              #if (INPUT_INTERFACE&INPUT_DP1)
              #if DP1_CABLE_PORT == MCU_PORT_NULL
              #ifdef CABLE_DET_PORT
                  UCHAR level;
              //    SetADC5VRange(VGA_DET_ADC);//5V ADC
                  McuPowerUpADC();
                  McuStartADC();
                  McuWaitADCComplete();
                  McuPowerDownADC();
                  level = McuGetADC(CABLE_DET_PORT);
                  if ((abs(DP_CABLE_LEVE-level) < 10) || (abs(BOTH_ON_LEVE-level) < 10)){
                      return TRUE;
                  }
                  else {
                      return FALSE;
                  }
              #else
                  return FALSE;
              #endif
              #else
                  if (McuGetIOBit(DP1_CABLE_PORT, DP1_CABLE_BIT) == DP1_CABLE_ACTIVE) {
                      return TRUE;
                  }
                  else {
                      return FALSE;
                  }
              #endif
              #else
                  return FALSE;
              #endif
              }
              
              BOOL IsDP2Connect(void)
              {
              #if (INPUT_INTERFACE&INPUT_DP2)
                  if (McuGetIOBit(DP2_CABLE_PORT, DP2_CABLE_BIT) == DP2_CABLE_ACTIVE) {
                      return TRUE;
                  }
                  else {
                      return FALSE;
                  }
              #else
                  return FALSE;
              #endif
              }
              
              BOOL IsDP3Connect(void)
              {
              #if (INPUT_INTERFACE&INPUT_DP2)
                  if (McuGetIOBit(DP3_CABLE_PORT, DP3_CABLE_BIT) == DP3_CABLE_ACTIVE) {
                      return TRUE;
                  }
                  else {
                      return FALSE;
                  }
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 9   

              #else
                  return FALSE;
              #endif
              }
              #endif
 491          //******************************************************************************
 492          // Prototype: 
 493          //  BOOL IsPanelPowerOn(void)
 494          // Parameters:
 495          //  None
 496          // Return:
 497          //  TRUE/FALSE
 498          // Purpose:
 499          //  Check panel power.
 500          // Notes:
 501          //  None
 502          //******************************************************************************
 503          BOOL IsPanelPowerOn(void)
 504          {
 505   1      #if PANEL_POWER_PORT == MCU_PORT_NULL
                  return bPanelPower;
              #else
 508   1          if (McuGetIOBit(PANEL_POWER_PORT, PANEL_POWER_BIT) == PANEL_POWER_ACTIVE) {
 509   2              return TRUE;
 510   2          }
 511   1          else {
 512   2              return FALSE;
 513   2          }
 514   1      #endif
 515   1      }
 516          
 517          //******************************************************************************
 518          // Prototype: 
 519          //  void LedGreenOn(void)
 520          // Parameters:
 521          //  None
 522          // Return:
 523          //  None
 524          // Purpose:
 525          //  Turn on the green LED.
 526          // Notes:
 527          //  None
 528          //******************************************************************************
 529          void LedGreenOn(void)
 530          {
 531   1      #if (!defined(ENABLE_FPGA_MODE))
 532   1          McuSetIOBit(LED_GREEN_PORT, LED_GREEN_BIT, LED_GREEN_ACTIVE);
 533   1      #endif
 534   1      }
 535          
 536          //******************************************************************************
 537          // Prototype: 
 538          //  void LedGreenOn(void)
 539          // Parameters:
 540          //  None
 541          // Return:
 542          //  None
 543          // Purpose:
 544          //  Turn off the green LED.
 545          // Notes:
 546          //  None
 547          //******************************************************************************
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 10  

 548          void LedGreenOff(void)
 549          {
 550   1      #if (!defined(ENABLE_FPGA_MODE))
 551   1          McuSetIOBit(LED_GREEN_PORT, LED_GREEN_BIT, ~LED_GREEN_ACTIVE);
 552   1      #endif
 553   1      }
 554          
 555          //******************************************************************************
 556          // Prototype: 
 557          //  void LedRedOn(void)
 558          // Parameters:
 559          //  None
 560          // Return:
 561          //  None
 562          // Purpose:
 563          //  Turn on the red LED.
 564          // Notes:
 565          //  None
 566          //******************************************************************************
 567          void LedRedOn(void)
 568          {
 569   1      #if (!defined(ENABLE_FPGA_MODE))
 570   1          McuSetIOBit(LED_RED_PORT, LED_RED_BIT, LED_RED_ACTIVE);
 571   1      #endif
 572   1      }
 573          
 574          //******************************************************************************
 575          // Prototype: 
 576          //  void LedRedOff(void)
 577          // Parameters:
 578          //  None
 579          // Return:
 580          //  None
 581          // Purpose:
 582          //  Turn off the red LED.
 583          // Notes:
 584          //  None
 585          //******************************************************************************
 586          void LedRedOff(void)
 587          {
 588   1      #if (!defined(ENABLE_FPGA_MODE))
 589   1          McuSetIOBit(LED_RED_PORT, LED_RED_BIT, ~LED_RED_ACTIVE);
 590   1      #endif
 591   1      }
 592          
 593          //******************************************************************************
 594          // Prototype: 
 595          //  void PanelPowerOn(void)
 596          // Parameters:
 597          //  None
 598          // Return:
 599          //  None
 600          // Purpose:
 601          //  Turn on the panel power.
 602          // Notes:
 603          //  None
 604          //******************************************************************************
 605          void PanelPowerOn(void)
 606          {
 607   1      #if PANEL_POWER_PORT == MCU_PORT_NULL
                  bPanelPower = PANEL_POWER_ACTIVE & BIT0;
              #else
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 11  

 610   1          McuSetIOBit(PANEL_POWER_PORT, PANEL_POWER_BIT, PANEL_POWER_ACTIVE);
 611   1      #endif
 612   1      }
 613          
 614          //******************************************************************************
 615          // Prototype: 
 616          //  void PanelPowerOff(void)
 617          // Parameters:
 618          //  None
 619          // Return:
 620          //  None
 621          // Purpose:
 622          //  Turn off the panel power.
 623          // Notes:
 624          //  None
 625          //******************************************************************************
 626          void PanelPowerOff(void)
 627          {
 628   1      #if PANEL_POWER_PORT == MCU_PORT_NULL
                  bPanelPower = ~PANEL_POWER_ACTIVE & BIT0;
              #else
 631   1          McuSetIOBit(PANEL_POWER_PORT, PANEL_POWER_BIT, ~PANEL_POWER_ACTIVE);
 632   1      #endif
 633   1      }
 634          
 635          //******************************************************************************
 636          // Prototype: 
 637          //  void BacklightOn(void)
 638          // Parameters:
 639          //  None
 640          // Return:
 641          //  None
 642          // Purpose:
 643          //  Turn on the backlight.
 644          // Notes:
 645          //  None
 646          //******************************************************************************
 647          void BacklightOn(void)
 648          {
 649   1      #if ENABLE_SCALER_LEDDRV == ON
                  LEDDriverOnOff(ON);
              #else
 652   1          McuSetIOBit(BACKLIGHT_PORT, BACKLIGHT_BIT, BACKLIGHT_ACTIVE);
 653   1      #endif
 654   1      #if ENABLE_ESD_PROTECT == ON
                  ReadESDCheckSum();
              #endif
 657   1      }
 658          
 659          //******************************************************************************
 660          // Prototype: 
 661          //  void BacklightOff(void)
 662          // Parameters:
 663          //  None
 664          // Return:
 665          //  None
 666          // Purpose:
 667          //  Turn off the backlight.
 668          // Notes:
 669          //  None
 670          //******************************************************************************
 671          void BacklightOff(void)
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 12  

 672          {
 673   1      #if ENABLE_SCALER_LEDDRV == ON
                  LEDDriverOnOff(OFF);
              #else
 676   1          McuSetIOBit(BACKLIGHT_PORT, BACKLIGHT_BIT, ~BACKLIGHT_ACTIVE);
 677   1      #endif
 678   1      }
 679          
 680          #if 1//ENABLE_ESD_PROTECT == ON
 681          //******************************************************************************
 682          // Prototype: 
 683          //  BOOL IsBackLightOn(void)
 684          // Parameters:
 685          //  None
 686          // Return:
 687          //  TRUE/FALSE
 688          // Purpose:
 689          //  Check panel power.
 690          // Notes:
 691          //  None
 692          //******************************************************************************
 693          BOOL IsBackLightOn(void)
 694          {
 695   1          if (McuGetIOBit(BACKLIGHT_PORT, BACKLIGHT_BIT) == BACKLIGHT_ACTIVE) {
 696   2              return TRUE;
 697   2          }
 698   1          else {
 699   2              return FALSE;
 700   2          }
 701   1      }
 702          #endif
 703          
 704          //******************************************************************************
 705          // Prototype: 
 706          //  void AudioPowerOn(void)
 707          // Parameters:
 708          //  None
 709          // Return:
 710          //  None
 711          // Purpose:
 712          //  Turn on the Audio AMP power.
 713          // Notes:
 714          //  None
 715          //******************************************************************************
 716          void AudioPowerOn(void)
 717          {
 718   1          McuSetIOBit(AMP_PWR_PORT, AMP_PWR_BIT, AMP_PWR_ACTIVE);
 719   1      }
 720          
 721          //******************************************************************************
 722          // Prototype: 
 723          //  void AudioPowerOff(void)
 724          // Parameters:
 725          //  None
 726          // Return:
 727          //  None
 728          // Purpose:
 729          //  Turn off the Audio AMP power.
 730          // Notes:
 731          //  None
 732          //******************************************************************************
 733          void AudioPowerOff(void)
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 13  

 734          {
 735   1          McuSetIOBit(AMP_PWR_PORT, AMP_PWR_BIT, ~AMP_PWR_ACTIVE);
 736   1      }
 737          
 738          //******************************************************************************
 739          // Prototype: 
 740          //  void AudioAMP_Off(void)
 741          // Parameters:
 742          //  None
 743          // Return:
 744          //  None
 745          // Purpose:
 746          //  Mute the Audio AMP.
 747          // Notes:
 748          //  None
 749          //******************************************************************************
 750          void AudioMuteOn(void)
 751          {
 752   1      #if ENABLE_SCALER_AUDIO == ON
 753   1      #if (INPUT_INTERFACE&INPUT_MHL_MASK)
                  UCHAR currentInterface = GetCurrInputInterface();
                  if (((currentInterface == DIGITAL_INPUT0) && (MHL_Is_CDSense1_IO_HIGH() == TRUE))
                   || ((currentInterface == DIGITAL_INPUT1) && (MHL_Is_CDSense2_IO_HIGH() == TRUE))
                   || ((currentInterface == DIGITAL_INPUT2) && (MHL_Is_CDSense1_IO_HIGH() == TRUE))
                   || ((currentInterface == DIGITAL_INPUT3) && (MHL_Is_CDSense2_IO_HIGH() == TRUE))) {
                  }
                  else
              #endif        
 762   1          {
 763   2              while ((GetTimerTick()-usTimerANAMute) < 150) {
 764   3                  ResetWDTimer();
 765   3              }
 766   2          }
 767   1      #endif
 768   1          McuSetIOBit(AMP_MUTE_PORT, AMP_MUTE_BIT, AMP_MUTE_ACTIVE);
 769   1      
 770   1      #if ENABLE_SCALER_AUDIO == ON
 771   1          Sleep(1);
 772   1          SC_AUDIO_OUT_CTRL |= BIT1; // 0x721
 773   1      #endif
 774   1      }
 775          
 776          //******************************************************************************
 777          // Prototype: 
 778          //  void AudioAMP_On(void)
 779          // Parameters:
 780          //  None
 781          // Return:
 782          //  None
 783          // Purpose:
 784          //  Turn on the Audio AMP.
 785          // Notes:
 786          //  None
 787          //******************************************************************************
 788          void AudioMuteOff(void)
 789          {
 790   1      #if ENABLE_SCALER_AUDIO == ON
 791   1          SC_AUDIO_OUT_CTRL &= ~BIT1; // 0x721
 792   1          Sleep(1);
 793   1      #endif
 794   1          McuSetIOBit(AMP_MUTE_PORT, AMP_MUTE_BIT, ~AMP_MUTE_ACTIVE);
 795   1      }
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 14  

 796          
 797          //******************************************************************************
 798          // Prototype: 
 799          //  void EdidWPOn(void)
 800          // Parameters:
 801          //  None
 802          // Return:
 803          //  None
 804          // Purpose:
 805          //  
 806          // Notes:
 807          //  None
 808          //******************************************************************************
 809          void EdidWPOn(void)
 810          {
 811   1          McuSetIOBit(EDID_WP_PORT, EDID_WP_BIT, EDID_WP_ACTIVE);
 812   1      }
 813          
 814          //******************************************************************************
 815          // Prototype: 
 816          //  void EdidWPOff(void)
 817          // Parameters:
 818          //  None
 819          // Return:
 820          //  None
 821          // Purpose:
 822          //  
 823          // Notes:
 824          //  None
 825          //******************************************************************************
 826          void EdidWPOff(void)
 827          {
 828   1          McuSetIOBit(EDID_WP_PORT, EDID_WP_BIT, ~EDID_WP_ACTIVE);
 829   1      }
 830          
 831          #if ENABLE_CUT_POWER_ARCH == ON
 832          //******************************************************************************
 833          // Prototype: 
 834          //  void PowerMOSOn(void)
 835          // Parameters:
 836          //  None
 837          // Return:
 838          //  None
 839          // Purpose:
 840          //  Turn on the power MOS
 841          // Notes:
 842          //  None
 843          //******************************************************************************
 844          void PowerMOSOn(void)
 845          {
 846   1          McuSetIOBit(POWER_MOS_PORT, POWER_MOS_BIT, POWER_MOS_ACTIVE);
 847   1      }
 848          
 849          //******************************************************************************
 850          // Prototype: 
 851          //  void PowerMOSOff(void)
 852          // Parameters:
 853          //  None
 854          // Return:
 855          //  None
 856          // Purpose:
 857          //  Turn off the power MOS
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 15  

 858          // Notes:
 859          //  None
 860          //******************************************************************************
 861          void PowerMOSOff(void)
 862          {
 863   1          McuSetIOBit(POWER_MOS_PORT, POWER_MOS_BIT, ~POWER_MOS_ACTIVE);
 864   1      }
 865          #endif
 866          
 867          #if ENABLE_DIGI3_HPD == ON
 868          //******************************************************************************
 869          // Prototype: 
 870          //  void Digi3HPDOn(void)
 871          // Parameters:
 872          //  None
 873          // Return:
 874          //  None
 875          // Purpose:
 876          //  Set hot plug in active state (connected)
 877          // Notes:
 878          //  None
 879          //******************************************************************************
 880          void Digi3HPDOn(void)
 881          {
 882   1          McuSetIOBit(DIG3_HPD_PORT, DIG3_HPD_BIT, DIG3_HPD_ACTIVE);
 883   1      }
 884          
 885          //******************************************************************************
 886          // Prototype: 
 887          //  void Digi3HPDOff(void)
 888          // Parameters:
 889          //  None
 890          // Return:
 891          //  None
 892          // Purpose:
 893          //  Set hot plug in inactive state (disconnected)
 894          // Notes:
 895          //  None
 896          //******************************************************************************
 897          void Digi3HPDOff(void)
 898          {
 899   1          McuSetIOBit(DIG3_HPD_PORT, DIG3_HPD_BIT, ~DIG3_HPD_ACTIVE);
 900   1      }
 901          #endif
 902          #if ENABLE_DIGI2_HPD == ON
 903          //******************************************************************************
 904          // Prototype: 
 905          //  void Digi2HPDOn(void)
 906          // Parameters:
 907          //  None
 908          // Return:
 909          //  None
 910          // Purpose:
 911          //  Set hot plug in active state (connected)
 912          // Notes:
 913          //  None
 914          //******************************************************************************
 915          void Digi2HPDOn(void)
 916          {
 917   1          McuSetIOBit(DIG2_HPD_PORT, DIG2_HPD_BIT, DIG2_HPD_ACTIVE);
 918   1      }
 919          
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 16  

 920          //******************************************************************************
 921          // Prototype: 
 922          //  void Digi2HPDOff(void)
 923          // Parameters:
 924          //  None
 925          // Return:
 926          //  None
 927          // Purpose:
 928          //  Set hot plug in inactive state (disconnected)
 929          // Notes:
 930          //  None
 931          //******************************************************************************
 932          void Digi2HPDOff(void)
 933          {
 934   1          McuSetIOBit(DIG2_HPD_PORT, DIG2_HPD_BIT, ~DIG2_HPD_ACTIVE);
 935   1      }
 936          #endif
 937          #if ENABLE_DIGI1_HPD == ON
 938          //******************************************************************************
 939          // Prototype: 
 940          //  void Digi1HPDOn(void)
 941          // Parameters:
 942          //  None
 943          // Return:
 944          //  None
 945          // Purpose:
 946          //  Set hot plug in active state (connected)
 947          // Notes:
 948          //  None
 949          //******************************************************************************
 950          void Digi1HPDOn(void)
 951          {
 952   1          McuSetIOBit(DIG1_HPD_PORT, DIG1_HPD_BIT, DIG1_HPD_ACTIVE);
 953   1      }
 954          
 955          //******************************************************************************
 956          // Prototype: 
 957          //  void Digi1HPDOff(void)
 958          // Parameters:
 959          //  None
 960          // Return:
 961          //  None
 962          // Purpose:
 963          //  Set hot plug in inactive state (disconnected)
 964          // Notes:
 965          //  None
 966          //******************************************************************************
 967          void Digi1HPDOff(void)
 968          {
 969   1          McuSetIOBit(DIG1_HPD_PORT, DIG1_HPD_BIT, ~DIG1_HPD_ACTIVE);
 970   1      }
 971          #endif
 972          
 973          #if ENABLE_DIGI0_HPD == ON
              //******************************************************************************
              // Prototype: 
              //  void Digi0HPDOn(void)
              // Parameters:
              //  None
              // Return:
              //  None
              // Purpose:
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 17  

              //  Set hot plug in active state (connected)
              // Notes:
              //  None
              //******************************************************************************
              void Digi0HPDOn(void)
              {
                  McuSetIOBit(DIG0_HPD_PORT, DIG0_HPD_BIT, DIG0_HPD_ACTIVE);
              }
              
              //******************************************************************************
              // Prototype: 
              //  void Digi0HPDOff(void)
              // Parameters:
              //  None
              // Return:
              //  None
              // Purpose:
              //  Set hot plug in inactive state (disconnected)
              // Notes:
              //  None
              //******************************************************************************
              void Digi0HPDOff(void)
              {
                  McuSetIOBit(DIG0_HPD_PORT, DIG0_HPD_BIT, ~DIG0_HPD_ACTIVE);
              }
              #endif
1008          
1009          #if (INPUT_INTERFACE&INPUT_DP)
1010          //******************************************************************************
1011          // Prototype: 
1012          //  void DPHPDOn(void)
1013          // Parameters:
1014          //  None
1015          // Return:
1016          //  None
1017          // Purpose:
1018          //  Set hot plug in active state (connected)
1019          // Notes:
1020          //  None
1021          //******************************************************************************
1022          void DPHPDOn(void)
1023          {
1024   1          McuSetIOBit(DP_HPD_PORT, DP_HPD_BIT, DP_HPD_ACTIVE);
1025   1          if (IsZpMode() == FALSE) {
1026   2              DPConfigHWHPD(TRUE);
1027   2          }
1028   1      }
1029          
1030          #if ENABLE_DP_HPD == ON
1031          //******************************************************************************
1032          // Prototype: 
1033          //  void DPHPDOff(void)
1034          // Parameters:
1035          //  None
1036          // Return:
1037          //  None
1038          // Purpose:
1039          //  Set hot plug in inactive state (disconnected)
1040          // Notes:
1041          //  None
1042          //******************************************************************************
1043          void DPHPDOff(void)
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 18  

1044          {
1045   1          McuSetIOBit(DP_HPD_PORT, DP_HPD_BIT, ~DP_HPD_ACTIVE);
1046   1          DPConfigHWHPD(FALSE);
1047   1      }
1048          #endif
1049          #endif
1050          #if (INPUT_INTERFACE&INPUT_DP1)
              void DP1HPDOn(void)
              {
                  McuSetIOBit(DP1_HPD_PORT, DP1_HPD_BIT, DP1_HPD_ACTIVE);
                  if (IsZpMode() == FALSE) {
                      DPConfigHWHPD(TRUE);
                  }
              }
              #if ENABLE_DP1_HPD == ON
              void DP1HPDOff(void)
              {
                  McuSetIOBit(DP1_HPD_PORT, DP1_HPD_BIT, ~DP1_HPD_ACTIVE);
                  DPConfigHWHPD(FALSE);
              }
              #endif
              #endif
1066          
1067          #if (INPUT_INTERFACE&INPUT_DP2)
              void DP2HPDOn(void)
              {
                  McuSetIOBit(DP2_HPD_PORT, DP2_HPD_BIT, DP2_HPD_ACTIVE);
                  if (IsZpMode() == FALSE) {
                      DPConfigHWHPD(TRUE);
                  }
              }
              #if ENABLE_DP2_HPD == ON
              void DP2HPDOff(void)
              {
                  McuSetIOBit(DP2_HPD_PORT, DP2_HPD_BIT, ~DP2_HPD_ACTIVE);
                  DPConfigHWHPD(FALSE);
              }
              #endif
              #endif
1083          
1084          #if (INPUT_INTERFACE&INPUT_DP3)
              void DP3HPDOn(void)
              {
                  McuSetIOBit(DP3_HPD_PORT, DP3_HPD_BIT, DP3_HPD_ACTIVE);
                  if (IsZpMode() == FALSE) {
                      DPConfigHWHPD(TRUE);
                  }
              }
              #if ENABLE_DP3_HPD == ON
              void DP3HPDOff(void)
              {
                  McuSetIOBit(DP3_HPD_PORT, DP3_HPD_BIT, ~DP3_HPD_ACTIVE);
                  DPConfigHWHPD(FALSE);
              }
              #endif
              #endif
1100          
1101          #if (ENABLE_DIGI3_HPD == ON) ||(ENABLE_DIGI2_HPD == ON) ||(ENABLE_DIGI1_HPD == ON) || (ENABLE_DIGI0_HPD ==
             - ON) || (ENABLE_DP_HPD == ON) || (ENABLE_DP1_HPD == ON) || (ENABLE_DP2_HPD == ON) || (ENABLE_DP3_HPD == ON)
1102          //******************************************************************************
1103          // Prototype: 
1104          //  BOOL bIsHPDActive(void)
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 19  

1105          // Parameters:
1106          //  None
1107          // Return:
1108          //  None
1109          // Purpose:
1110          //  None
1111          // Notes:
1112          //  None
1113          //******************************************************************************
1114          BOOL bIsHPDActive(void)
1115          {
1116   1         UCHAR curr_interface = GetCurrInputInterface();
1117   1      
1118   1      #if IS_NT68810_SERIES || IS_NT68870_SERIES
1119   1          #if (INPUT_INTERFACE&INPUT_MHL0)
                  if ( curr_interface == DIGITAL_INPUT0 && MHL_Is_CDSense1_IO_HIGH() ) {
                      return TRUE;
                  }
                  #endif
1124   1          #if (INPUT_INTERFACE&INPUT_MHL1)
                  if ( curr_interface == DIGITAL_INPUT1 && MHL_Is_CDSense2_IO_HIGH() ) {
                      return TRUE;
                  }
                  #endif 
1129   1          #if (INPUT_INTERFACE&INPUT_MHL2)
                  if ( curr_interface == DIGITAL_INPUT2 && MHL_Is_CDSense1_IO_HIGH() ) {
                      return TRUE;
                  }
                  #endif
1134   1          #if (INPUT_INTERFACE&INPUT_MHL3)
                  if ( curr_interface == DIGITAL_INPUT3 && MHL_Is_CDSense2_IO_HIGH() ) {
                      return TRUE;
                  }
                  #endif  
1139   1      #else    
                #if (INPUT_INTERFACE&INPUT_MHL0)
                  if ( curr_interface == DIGITAL_INPUT0 && IsMHL0CableConnect() ) {
                      return TRUE;
                  }
                #endif
                #if (INPUT_INTERFACE&INPUT_MHL1)
                  if ( curr_interface == DIGITAL_INPUT1 && IsMHL1CableConnect() ) {
                      return TRUE;
                  }
                #endif
              #endif
1151   1      
1152   1      #if ENABLE_DIGI0_HPD == ON && DIG0_HPD_PORT != MCU_PORT_NULL
                 if (McuGetIOBit(DIG0_HPD_PORT, DIG0_HPD_BIT) != DIG0_HPD_ACTIVE && curr_interface == DIGITAL_INPUT0) {
                      return FALSE;
                  }
              #endif
1157   1      #if ENABLE_DIGI1_HPD == ON && DIG1_HPD_PORT != MCU_PORT_NULL
1158   1         if (McuGetIOBit(DIG1_HPD_PORT, DIG1_HPD_BIT) != DIG1_HPD_ACTIVE && curr_interface == DIGITAL_INPUT1) {
1159   2              return FALSE;
1160   2          }
1161   1      #endif
1162   1      #if (INPUT_INTERFACE&INPUT_DIG2)
1163   1      #if ENABLE_DIGI2_HPD == ON && DIG2_HPD_PORT != MCU_PORT_NULL
                 if (McuGetIOBit(DIG2_HPD_PORT, DIG2_HPD_BIT) != DIG2_HPD_ACTIVE && curr_interface == DIGITAL_INPUT2) {
                      return FALSE;
                  }
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 20  

              #endif
1168   1      #endif
1169   1      #if (INPUT_INTERFACE&INPUT_DIG3)
1170   1      #if ENABLE_DIGI3_HPD == ON && DIG3_HPD_PORT != MCU_PORT_NULL
1171   1         if (McuGetIOBit(DIG3_HPD_PORT, DIG3_HPD_BIT) != DIG3_HPD_ACTIVE && curr_interface == DIGITAL_INPUT3) {
1172   2              return FALSE;
1173   2          }
1174   1      #endif
1175   1      #endif
1176   1      #if (INPUT_INTERFACE&INPUT_DP)
1177   1      #if ENABLE_DP_HPD == ON && DP_HPD_PORT != MCU_PORT_NULL
1178   1         if (McuGetIOBit(DP_HPD_PORT, DP_HPD_BIT) != DP_HPD_ACTIVE && curr_interface == DISPLAY_PORT_INPUT) {
1179   2              return FALSE;
1180   2          }
1181   1      #endif
1182   1      #endif
1183   1      #if (INPUT_INTERFACE&INPUT_DP1)
              #if ENABLE_DP1_HPD == ON && DP1_HPD_PORT != MCU_PORT_NULL
                 if (McuGetIOBit(DP1_HPD_PORT, DP1_HPD_BIT) != DP1_HPD_ACTIVE && curr_interface == DISPLAY_PORT_INPUT1) 
             -{
                      return FALSE;
                  }
              #endif
              #endif
1190   1      #if (INPUT_INTERFACE&INPUT_DP2)
              #if ENABLE_DP2_HPD == ON && DP2_HPD_PORT != MCU_PORT_NULL
                 if (McuGetIOBit(DP2_HPD_PORT, DP2_HPD_BIT) != DP2_HPD_ACTIVE && curr_interface == DISPLAY_PORT_INPUT2) 
             -{
                      return FALSE;
                  }
              #endif
              #endif
1197   1      #if (INPUT_INTERFACE&INPUT_DP3)
              #if ENABLE_DP3_HPD == ON && DP3_HPD_PORT != MCU_PORT_NULL
                 if (McuGetIOBit(DP3_HPD_PORT, DP3_HPD_BIT) != DP3_HPD_ACTIVE && curr_interface == DISPLAY_PORT_INPUT3) 
             -{
                      return FALSE;
                  }
              #endif
              #endif
1204   1      
1205   1      #if ENABLE_USB_TYPE_C == ON
                  if (curr_interface == USB_TYPE_C_INTERFACE && IsUSBCCHPDActive() == TRUE) { //need add cc status.
                      return FALSE;
                  }
              #endif
1210   1          return TRUE;
1211   1      }
1212          #endif
1213          
1214          #if IS_NT68790_SERIES
              void ConfigHPD(void)
              {
              UCHAR hpd;
                  hpd = 0x00;
              
                  if (GetSCID() == SCID_790_A) {
                      if ((DP_HPD_PORT == MCU_PORT_E) && (DP_HPD_BIT == BIT6)) { // PE6/HPD1/CBUS1
                          hpd |= BIT2;//pull up +3.3V
                      }
                      if ((DP_HPD_PORT == MCU_PORT_E) && (DP_HPD_BIT == BIT7)) { // PE7/HPD2/CBUS2
                          hpd |= BIT0;//pull up +3.3V
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 21  

                      }
                      if ((DIG0_HPD_PORT == MCU_PORT_E) && (DIG0_HPD_BIT == BIT6)) { // PE6/HPD1/CBUS1
                          hpd |= BIT3;//pull up +5V
                      }
                      if ((DIG0_HPD_PORT == MCU_PORT_E) && (DIG0_HPD_BIT == BIT7)) { // PE7/HPD2/CBUS2
                          hpd |= BIT1;//pull up +5V
                      }
                      if ((DIG1_HPD_PORT == MCU_PORT_E) && (DIG1_HPD_BIT == BIT6)) { // PE6/HPD1/CBUS1
                          hpd |= BIT3;//pull up +5V
                      }
                      if ((DIG1_HPD_PORT == MCU_PORT_E) && (DIG1_HPD_BIT == BIT7)) { // PE7/HPD2/CBUS2
                          hpd |= BIT1;//pull up +5V
                      }
                  }
                  else {//b version
                      if ((DP_HPD_PORT == MCU_PORT_E) && (DP_HPD_BIT == BIT6)) { // PE6/HPD1/CBUS1
                          hpd |= BIT0;//pull up +3.3V
                      }
                      if ((DP_HPD_PORT == MCU_PORT_E) && (DP_HPD_BIT == BIT7)) { // PE7/HPD2/CBUS2
                          hpd |= BIT2;//pull up +3.3V
                      }
                      if ((DIG0_HPD_PORT == MCU_PORT_E) && (DIG0_HPD_BIT == BIT6)) { // PE6/HPD1/CBUS1
                          hpd |= BIT1;//pull up +5V
                      }
                      if ((DIG0_HPD_PORT == MCU_PORT_E) && (DIG0_HPD_BIT == BIT7)) { // PE7/HPD2/CBUS2
                          hpd |= BIT3;//pull up +5V
                      }
                      if ((DIG1_HPD_PORT == MCU_PORT_E) && (DIG1_HPD_BIT == BIT6)) { // PE6/HPD1/CBUS1
                          hpd |= BIT1;//pull up +5V
                      }
                      if ((DIG1_HPD_PORT == MCU_PORT_E) && (DIG1_HPD_BIT == BIT7)) { // PE7/HPD2/CBUS2
                          hpd |= BIT3;//pull up +5V
                      }
                  }
                  HPD_CTRL = hpd;//0x06;
              }
              #endif
1263          #if IS_NT68810_SERIES || IS_NT68870_SERIES
1264          void ConfigHPD(void)
1265          {
1266   1          if ((DP_HPD_PORT == MCU_PORT_E) && (DP_HPD_BIT == BIT6)) { // PE6/HPD1/CBUS1
1267   2              SC_SetBitDPppPHY(_DPPP_PHY0, _TMDS_HPD_IO_CTRL, BIT5, FALSE);//pull up +3.3V
1268   2          }
1269   1          if ((DP_HPD_PORT == MCU_PORT_E) && (DP_HPD_BIT == BIT7)) { // PE7/HPD2/CBUS2
1270   2      #if IS_NT68810_SERIES
                      SC_SetBitDPppPHY(_DPPP_PHY0, _TMDS_HPD_IO_CTRL, BIT6, FALSE);//pull up +3.3V
              #else
1273   2              SC_SetBitDPppPHY(_DPPP_PHY1, _TMDS_HPD_IO_CTRL, BIT6, FALSE);//pull up +3.3V
1274   2      #endif
1275   2          }
1276   1          if ((DP1_HPD_PORT == MCU_PORT_E) && (DP1_HPD_BIT == BIT6)) { // PE6/HPD1/CBUS1
1277   2              SC_SetBitDPppPHY(_DPPP_PHY0, _TMDS_HPD_IO_CTRL, BIT5, FALSE);//pull up +3.3V
1278   2          }
1279   1          if ((DP1_HPD_PORT == MCU_PORT_E) && (DP1_HPD_BIT == BIT7)) { // PE7/HPD2/CBUS2
1280   2      #if IS_NT68810_SERIES
                      SC_SetBitDPppPHY(_DPPP_PHY0, _TMDS_HPD_IO_CTRL, BIT6, FALSE);//pull up +3.3V
              #else
1283   2              SC_SetBitDPppPHY(_DPPP_PHY1, _TMDS_HPD_IO_CTRL, BIT6, FALSE);//pull up +3.3V
1284   2      #endif
1285   2          }
1286   1          
1287   1          if ((DIG0_HPD_PORT == MCU_PORT_E) && (DIG0_HPD_BIT == BIT6)) { // PE6/HPD1/CBUS1
C51 COMPILER V9.54   BOARD                                                                 01/06/2017 14:56:44 PAGE 22  

1288   2              SC_SetBitDPppPHY(_DPPP_PHY0, _TMDS_HPD_IO_CTRL, BIT5, TRUE);//pull up +5V
1289   2          }
1290   1          if ((DIG0_HPD_PORT == MCU_PORT_E) && (DIG0_HPD_BIT == BIT7)) { // PE7/HPD2/CBUS2
1291   2      #if IS_NT68810_SERIES
                      SC_SetBitDPppPHY(_DPPP_PHY0, _TMDS_HPD_IO_CTRL, BIT6, TRUE);//pull up +5V
              #else
1294   2              SC_SetBitDPppPHY(_DPPP_PHY1, _TMDS_HPD_IO_CTRL, BIT6, TRUE);//pull up +5V
1295   2      #endif
1296   2          }
1297   1          if ((DIG1_HPD_PORT == MCU_PORT_E) && (DIG1_HPD_BIT == BIT6)) { // PE6/HPD1/CBUS1
1298   2              SC_SetBitDPppPHY(_DPPP_PHY0, _TMDS_HPD_IO_CTRL, BIT5, TRUE);//pull up +5V
1299   2          }
1300   1          if ((DIG1_HPD_PORT == MCU_PORT_E) && (DIG1_HPD_BIT == BIT7)) { // PE7/HPD2/CBUS2
1301   2      #if IS_NT68810_SERIES
                      SC_SetBitDPppPHY(_DPPP_PHY0, _TMDS_HPD_IO_CTRL, BIT6, TRUE);//pull up +5V
              #else
1304   2              SC_SetBitDPppPHY(_DPPP_PHY1, _TMDS_HPD_IO_CTRL, BIT6, TRUE);//pull up +5V
1305   2      #endif
1306   2          }
1307   1      }
1308          #endif
1309          
1310          #if ENABLE_USB_TYPE_C == ON
              void AUXPNSwapOn(void)
              {
                  McuSetIOBit(AUXPN_SWAP_PORT, AUXPN_SWAP_BIT, AUXPN_SWAP_ACTIVE);
              }
              
              void AUXPNSwapOff(void)
              {
                  McuSetIOBit(AUXPN_SWAP_PORT, AUXPN_SWAP_BIT, ~AUXPN_SWAP_ACTIVE);
              }
              
              void BillBoardEnableOn(void)
              {
                  McuSetIOBit(BILLBOARD_ENABLE_PORT, BILLBOARD_ENABLE_BIT, BILLBOARD_ENABLE_ACTIVE);
              }
              
              void BillBoardEnableOff(void)
              {
                  McuSetIOBit(BILLBOARD_ENABLE_PORT, BILLBOARD_ENABLE_BIT, ~BILLBOARD_ENABLE_ACTIVE);
              }
              #endif
*** WARNING C294 IN LINE 1273 OF Phy\SI\NVT\Board\Board.c: unreachable code
*** WARNING C294 IN LINE 1277 OF Phy\SI\NVT\Board\Board.c: unreachable code
*** WARNING C294 IN LINE 1283 OF Phy\SI\NVT\Board\Board.c: unreachable code
*** WARNING C294 IN LINE 1288 OF Phy\SI\NVT\Board\Board.c: unreachable code
*** WARNING C294 IN LINE 1294 OF Phy\SI\NVT\Board\Board.c: unreachable code
*** WARNING C294 IN LINE 1298 OF Phy\SI\NVT\Board\Board.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    519    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
