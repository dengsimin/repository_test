C51 COMPILER V9.54   AUTOADJCONFIG                                                         01/06/2017 14:56:39 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE AUTOADJCONFIG
OBJECT MODULE PLACED IN .\Bin\AutoAdjConfig.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Sys\AutoAdjConfig.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\App\OS
                    -D;.\App\User;.\Lib;.\Lib\NT68810 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;.\Phy\SI\N
                    -VT\Keypad;.\Sys;.\Sys\SI\NVT;.\Phy\SI\NVT\Keypad\NT68870_MODULE_KEYPAD) DEFINE(SCALER_TYPE=NT68870,NT68870_MODULE,LVIEW_
                    -2560X1440,FLASH_BANK=8) PRINT(.\Lst\AutoAdjConfig.lst) TABS(2) OBJECT(.\Bin\AutoAdjConfig.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          
  14          //******************************************************************************
  15          // M A C R O   D E F I N I T I O N S
  16          //******************************************************************************
  17          
  18          //******************************************************************************
  19          // G L O B A L   V A R I A B L E S
  20          //******************************************************************************
  21          
  22          //******************************************************************************
  23          // S T A T I C   V A R I A B L E S
  24          //******************************************************************************
  25          
  26          //******************************************************************************
  27          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  28          //******************************************************************************
  29          
  30          //******************************************************************************
  31          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  32          //******************************************************************************
  33          
  34          //******************************************************************************
  35          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  36          //******************************************************************************
  37          
  38          //******************************************************************************
  39          // F U N C T I O N   B O D Y S
  40          //******************************************************************************
  41          
  42          /**************************************************************************//**
  43           * According to the v start position and v active length, report the present image is full-screen or not.
  44           * @param v_beg Vertical start position.
  45           * @param v_act Vertical active length.
  46           * @return TRUE if the present image is v_act not full-screen else FALSE.
  47           ******************************************************************************/
  48          BOOL IsVNonFullScreen(USHRT v_beg, USHRT v_act)
  49          {
  50   1          USHRT cap_vlen;
  51   1          USHRT vtotal;
  52   1          cap_vlen = GetVCaptureSize();
C51 COMPILER V9.54   AUTOADJCONFIG                                                         01/06/2017 14:56:39 PAGE 2   

  53   1          vtotal = GetInputVTotal();
  54   1          if ((v_beg > (vtotal-cap_vlen))) {
  55   2              return TRUE;
  56   2          }
  57   1          if (v_act < (cap_vlen - 10)) {
  58   2              return TRUE;
  59   2          }
  60   1          return FALSE;
  61   1      }
  62          
  63          /**************************************************************************//**
  64           * According to the h start position and h active length, report the present image is full-screen or not.
  65           * @param h_beg Horizontal start position.
  66           * @param h_act Horizontal active length.
  67           * @return TRUE if the present image h_act is not full-screen else FALSE.
  68           ******************************************************************************/
  69          BOOL IsHNonFullScreen(USHRT h_beg, USHRT h_act)
  70          {
  71   1          USHRT cap_hwid;
  72   1          cap_hwid = GetHCaptureSize();
  73   1          h_beg = 0; // Disable compile warning only.
  74   1        h_act = (ULONG)h_act * InputTiming.usHTotal50 / GetAngInputHTotal();
  75   1          if (((cap_hwid/10) < abs(cap_hwid-h_act))) {
  76   2              return TRUE;
  77   2          }
  78   1          return FALSE;
  79   1      }
  80          
  81          /**************************************************************************//**
  82           * According to the h/v start position and h/v active length, report the present image is full-screen or n
             -ot.
  83           * @param h_beg Horizontal start position.
  84           * @param v_beg Vertical start position.
  85           * @param h_act Horizontal active length.
  86           * @param v_act Vertical active length.
  87           * @return TRUE if the present image is not full-screen else FALSE.
  88           ******************************************************************************/
  89          /* 
  90          BOOL IsNonFullScreen(USHRT h_beg, USHRT v_beg, USHRT h_act, USHRT v_act) 
  91          {
  92              USHRT cap_hwid, cap_vlen;
  93              USHRT vtotal;
  94          
  95              cap_hwid = GetHCaptureSize();
  96              cap_vlen = GetVCaptureSize();
  97              vtotal = GetInputVTotal();
  98          
  99          #if 0
 100              if ((v_beg > (vtotal-cap_vlen)) || 
 101                  (v_beg < InputTiming.usVStartMin) || 
 102                  (v_beg > InputTiming.usVStartMax) ||
 103                  (h_beg < InputTiming.usHStartMin) || 
 104                  (h_beg > InputTiming.usHStartMax) ||
 105                  ((cap_hwid*0.06) < abs(cap_hwid-h_act)) ||
 106                  ((cap_vlen*0.06) < abs(cap_vlen-v_act))
 107                 ) {
 108                  return TRUE;
 109              }
 110          #else
 111            h_beg = 0; // Disable compile warning only.
 112            h_act = (ULONG)h_act * InputTiming.usHTotal50 / GetAngInputHTotal();
 113              if ((v_beg > (vtotal-cap_vlen)) || 
C51 COMPILER V9.54   AUTOADJCONFIG                                                         01/06/2017 14:56:39 PAGE 3   

 114                  ((cap_hwid/10) < abs(cap_hwid-h_act))) {
 115                  return TRUE;
 116              }
 117          #endif
 118              
 119              if (v_act < (cap_vlen - 10)) {
 120                  return TRUE;
 121              }
 122              
 123              return FALSE;
 124          }
 125          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    199    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
