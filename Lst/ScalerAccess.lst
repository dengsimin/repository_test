C51 COMPILER V9.54   SCALERACCESS                                                          01/06/2017 14:56:37 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SCALERACCESS
OBJECT MODULE PLACED IN .\Bin\ScalerAccess.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Lib\ScalerAccess.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\App\OSD
                    -;.\App\User;.\Lib;.\Lib\NT68810 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;.\Phy\SI\NV
                    -T\Keypad;.\Sys;.\Sys\SI\NVT;.\Phy\SI\NVT\Keypad\NT68870_MODULE_KEYPAD) DEFINE(SCALER_TYPE=NT68870,NT68870_MODULE,LVIEW_2
                    -560X1440,FLASH_BANK=8) PRINT(.\Lst\ScalerAccess.lst) TABS(2) OBJECT(.\Bin\ScalerAccess.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          
  14          //******************************************************************************
  15          // M A C R O   D E F I N I T I O N S
  16          //******************************************************************************
  17          
  18          //******************************************************************************
  19          // G L O B A L   V A R I A B L E S
  20          //******************************************************************************
  21          
  22          //******************************************************************************
  23          // S T A T I C   V A R I A B L E S
  24          //******************************************************************************
  25          
  26          //******************************************************************************
  27          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  28          //******************************************************************************
  29          
  30          //******************************************************************************
  31          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  32          //******************************************************************************
  33          
  34          //******************************************************************************
  35          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  36          //******************************************************************************
  37          
  38          //******************************************************************************
  39          // F U N C T I O N   B O D Y S
  40          //******************************************************************************
  41          
  42          /**************************************************************************//**
  43           * Read 2-bytes from scaler register.
  44           * @return 2-bytes value.
  45           ******************************************************************************/
  46          USHRT ReadShortScaler(UCHAR *address)
  47          {
  48   1          UCHAR ch;
  49   1          USHRT value;
  50   1      
  51   1          ch = *address;
  52   1          address++;
C51 COMPILER V9.54   SCALERACCESS                                                          01/06/2017 14:56:37 PAGE 2   

  53   1          value = *address;
  54   1          value <<= 8;
  55   1          value |= ch;
  56   1      
  57   1          return value;
  58   1      }
  59          
  60          /**************************************************************************//**
  61           * Read 3-bytes from scaler register.
  62           * @return 3-bytes value.
  63           ******************************************************************************/
  64          ULONG Read3ByteScaler(UCHAR *address)
  65          {
  66   1          UCHAR ch;
  67   1          ULONG value;
  68   1      
  69   1          address += 2;
  70   1          value = *address;
  71   1          address--;
  72   1          ch = *address;
  73   1          value <<= 8;
  74   1          value |= ch;
  75   1          address--;
  76   1          ch = *address;
  77   1          value <<= 8;
  78   1          value |= ch;
  79   1      
  80   1          return value;
  81   1      }
  82          
  83          /**************************************************************************//**
  84           * Read 2-bytes from scaler register with filter.
  85           * @return 2-bytes value.
  86           ******************************************************************************/
  87          USHRT ReadShortScalerHighLowFilter(UCHAR *address)
  88          {
  89   1          USHRT value;
  90   1          UCHAR i=0;
  91   1          value = ReadShortScaler(address);
  92   1          while ((value != ReadShortScaler(address)) && (i < 5)) {
  93   2              value = ReadShortScaler(address);
  94   2              i++;
  95   2          }
  96   1          return value;
  97   1      }
  98          
  99          /**************************************************************************//**
 100           * Read 3-bytes from scaler register with filter.
 101           * @return 3-bytes value.
 102           ******************************************************************************/
 103          ULONG Read3ByteScalerHighLowFilter(UCHAR *address)
 104          {
 105   1          xdata ULONG value;
 106   1          xdata UCHAR i = 0;
 107   1          value = Read3ByteScaler(address);
 108   1          while ((value != Read3ByteScaler(address)) && (i < 5)) {
 109   2              value = Read3ByteScaler(address);
 110   2              i++;
 111   2          }
 112   1          return value;
 113   1      }
 114          
C51 COMPILER V9.54   SCALERACCESS                                                          01/06/2017 14:56:37 PAGE 3   

 115          /**************************************************************************//**
 116           * Write 2-bytes to scaler register.
 117           * @param address ID of scaler register.
 118           * @param value 2-bytes data.
 119           ******************************************************************************/
 120          void WriteShortScaler(UCHAR *address, USHRT value)
 121          {
 122   1          *address = (UCHAR) value;
 123   1          address++;
 124   1          *address = (UCHAR) (value>>8);
 125   1      }
 126          
 127          /**************************************************************************//**
 128           * Write 3-bytes to scaler register.
 129           * @param address ID of scaler register.
 130           * @param value 3-bytes data.
 131           ******************************************************************************/
 132          void Write3ByteScaler(UCHAR *address, ULONG value)
 133          {
 134   1          *address = (UCHAR)value;
 135   1          address++;
 136   1          *address = (UCHAR)(value >> 8);
 137   1          address++;
 138   1          *address = (UCHAR)(value >> 16);
 139   1      }
 140          
 141          /**************************************************************************//**
 142           * Write data to index port.
 143           * @param type Index port type.
 144           * @param offset Start address.
 145           * @param len Data size.
 146           * @param p Pointer to the data.
 147           ******************************************************************************/
 148          void WriteScalerIndexPort(UCHAR type, USHRT offset, USHRT len, UCHAR *p)
 149          {
 150   1          USHRT i;
 151   1          ResetWDTimer();
 152   1          SC_INDEX_CTRL = type;
 153   1          SC_INDEX_ADDR_LO = (UCHAR)offset;
 154   1          SC_INDEX_ADDR_HI = (UCHAR)(offset >> 8);
 155   1          for (i=0; i<len; i++) {
 156   2              SC_INDEX_DATA = p[i];
 157   2          }
 158   1          ResetWDTimer();          
 159   1      }
 160          
 161          #if ENABLE_OD_3D_MODE == ON
              /**************************************************************************//**
               * Write data to index port.
               * This function is available when ENABLE_OD_3D_MODE is enabled.
               * @param type Index port type.
               * @param offset Start address.
               * @param len Data size.
               * @param p Pointer to the data.
               ******************************************************************************/
              void WriteScalerIndexPort2(UCHAR type, USHRT offset, USHRT len, UCHAR *p)
              {
                  USHRT i;
              
                  SC_INDEX_CTRL = type;
                  SC_INDEX_ADDR_LO = (UCHAR)offset;
                  SC_INDEX_ADDR_HI = (UCHAR)(offset >> 8);
C51 COMPILER V9.54   SCALERACCESS                                                          01/06/2017 14:56:37 PAGE 4   

                  for (i=0; i<len; i++) {
                      SC_INDEX_DATA2 = p[i];
                  }
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    485    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      34
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
